<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无媛无故 - wangchloe的个人博客</title>
  
  <subtitle>(๑•ᴗ•๑)做一个有记性有温度不掉发的程序媛！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangchloe.vip/"/>
  <updated>2019-07-23T09:41:35.558Z</updated>
  <id>https://wangchloe.vip/</id>
  
  <author>
    <name>Chloe Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>巴适川渝</title>
    <link href="https://wangchloe.vip/2019/05/04/life7/"/>
    <id>https://wangchloe.vip/2019/05/04/life7/</id>
    <published>2019-05-03T19:12:48.000Z</published>
    <updated>2019-07-23T09:41:35.558Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>巴适滴狠！</p><a id="more"></a><hr><p><a href="https://v.vuevideo.net/share/post/7699160849240349086" target="_blank" rel="noopener">wangchloe 的 Vlog | 巴适川渝</a></p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;巴适滴狠！&lt;/p&gt;
    
    </summary>
    
      <category term="你好，陌生人" scheme="https://wangchloe.vip/categories/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E9%99%8C%E7%94%9F%E4%BA%BA/"/>
    
    
      <category term="爱旅游" scheme="https://wangchloe.vip/tags/%E7%88%B1%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>NativeApi思考</title>
    <link href="https://wangchloe.vip/2019/04/05/blog43/"/>
    <id>https://wangchloe.vip/2019/04/05/blog43/</id>
    <published>2019-04-04T19:27:35.000Z</published>
    <updated>2019-07-23T09:57:24.862Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><!-- MarkdownTOC --><ul><li>NativeApi思考<ul><li>以调用Native上传图片组件为例</li><li>Hybrid通信原理<ul><li>JS Bridge</li></ul></li></ul></li></ul><!-- /MarkdownTOC --><a id="more"></a><h2 id="NativeApi思考"><a href="#NativeApi思考" class="headerlink" title="NativeApi思考"></a>NativeApi思考</h2><p>“//webapp/js/common/hybridapi/nativefunction.js”,</p><p><strong>将一个json对象转换成json字符串，也可以将一个json字符串转换成一个json对象。</strong><br>“//webapp/js/common/json2.js”,</p><h3 id="以调用Native上传图片组件为例"><a href="#以调用Native上传图片组件为例" class="headerlink" title="以调用Native上传图片组件为例"></a>以调用Native上传图片组件为例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    NS.register(<span class="string">"NativeApi"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 目前Android webview不支持type=file事件，通过ifanli解决：</span></span><br><span class="line">    <span class="comment">// 定义全局函数用于回调 </span></span><br><span class="line">    <span class="built_in">window</span>[<span class="string">"nativeTakePhotoCallback"</span>] = <span class="function"><span class="keyword">function</span>(<span class="params">result, url, ud</span>) </span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//options参数若有相同项，则替换$.extend内的第三个&#123;&#125;类目</span></span><br><span class="line">    NS.NativeApi.add(<span class="string">"takePhoto"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> settings = $.extend(<span class="literal">true</span>, &#123;&#125;, &#123;</span><br><span class="line">            imgMaxWidth: <span class="number">640</span>,</span><br><span class="line">            uploadUrl: <span class="string">"&#123;0&#125;xiaozu/ajaxUploadImg"</span>.format(currentApiRoot),</span><br><span class="line">            userData: <span class="string">""</span>,</span><br><span class="line">            t: <span class="number">0</span>,</span><br><span class="line">            callback: <span class="string">"nativeTakePhotoCallback"</span></span><br><span class="line">        &#125;, options);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> protocol = <span class="string">"ifanli://&#123;0&#125;/dev/takephoto?cb=&#123;1&#125;&amp;w=&#123;2&#125;&amp;ud=&#123;3&#125;&amp;upload=&#123;4&#125;&amp;t=&#123;5&#125;"</span></span><br><span class="line">            .format(ifanliProtocol,</span><br><span class="line">                rebuildCallback(settings.callback),</span><br><span class="line">                settings.imgMaxWidth,</span><br><span class="line">                settings.userData,</span><br><span class="line">                <span class="comment">// 把字符串作为 URI 组件进行编码，其中的某些字符将被十六进制的转义序列进行替换。</span></span><br><span class="line">                <span class="comment">// eg: : -&gt; %3A   / -&gt; %2F</span></span><br><span class="line">                <span class="built_in">encodeURIComponent</span>(settings.uploadUrl),</span><br><span class="line">                settings.t);</span><br><span class="line">        connectApp(protocol);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// js Bridge建立Native与H5间通信</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">connectApp</span>(<span class="params">protocol</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">"iframe"</span>);</span><br><span class="line">        <span class="keyword">var</span> iframeStyle = <span class="built_in">document</span>.createAttribute(<span class="string">"style"</span>);</span><br><span class="line">        <span class="keyword">var</span> iframeSrc = <span class="built_in">document</span>.createAttribute(<span class="string">"src"</span>);</span><br><span class="line"></span><br><span class="line">        iframeStyle.nodeValue = <span class="string">"display:none;width:0;height:0;"</span>;</span><br><span class="line">        iframeSrc.nodeValue = protocol;</span><br><span class="line">        iframe.setAttributeNode(iframeStyle);</span><br><span class="line">        iframe.setAttributeNode(iframeSrc);</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(iframe);</span><br><span class="line"></span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.body.removeChild(iframe);</span><br><span class="line">        &#125;, <span class="number">250</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">rebuildCallback</span>(<span class="params">cb</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t = cb;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($.isFunction(cb)) &#123;</span><br><span class="line">            t = <span class="string">"fanliHybrid_"</span> + (+<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">            <span class="built_in">window</span>[t] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 将具有length属性的对象转成数组</span></span><br><span class="line">                cb.apply(<span class="literal">null</span>, <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>, <span class="number">0</span>));</span><br><span class="line">                <span class="keyword">delete</span> <span class="built_in">window</span>[t];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>format传入参数实现</li></ul><p>“//webapp/js/base.js”,<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">String</span>.prototype.format = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> temS = <span class="keyword">this</span>, i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length; ++i) &#123;</span><br><span class="line">            temS = temS.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"\\&#123;"</span> + i + <span class="string">"\\&#125;"</span>, <span class="string">"g"</span>), <span class="built_in">arguments</span>[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> temS;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>+new Date()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    s = <span class="keyword">new</span> <span class="built_in">Date</span>().toString();</span><br><span class="line">    <span class="comment">// "Wed May 17 2017 11:00:16 GMT+0800 (中国标准时间)"</span></span><br><span class="line"></span><br><span class="line">    t = (+<span class="keyword">new</span> <span class="built_in">Date</span>()).toString();</span><br><span class="line">    <span class="comment">// "1494990039861"</span></span><br><span class="line">    <span class="comment">// +new Date(); 等同于 new Date().getTime(); 简略写法，得到毫秒</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Array.prototype.slice.call(arguments, 0)</code>剖析</li></ul><p>将具有length属性的对象转成数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">// array.js slice的内部实现</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">slice</span>(<span class="params">start, end</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len = ToUint32(<span class="keyword">this</span>.length),</span><br><span class="line">        result = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = start; i &lt; end; i++) &#123;</span><br><span class="line">        result.push(<span class="keyword">this</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 传入arguments类数组，调用Array.prototype.slice原型方法</span></span><br><span class="line">    <span class="comment">// 并用call()方法，将作用域限定在arguments中</span></span><br><span class="line">    <span class="comment">// 这里Array.prototype就可以理解为arguments</span></span><br><span class="line">    <span class="comment">// 参数0为slice()方法的第一个参数，即开始位置索引，返回整个数组。</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>, <span class="number">0</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>JS Bridge建立Native与H5间通信</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">connectApp</span>(<span class="params">protocol</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">"iframe"</span>);</span><br><span class="line">    <span class="keyword">var</span> iframeStyle = <span class="built_in">document</span>.createAttribute(<span class="string">"style"</span>);</span><br><span class="line">    <span class="keyword">var</span> iframeSrc = <span class="built_in">document</span>.createAttribute(<span class="string">"src"</span>);</span><br><span class="line"></span><br><span class="line">    iframeStyle.nodeValue = <span class="string">"display:none;width:0;height:0;"</span>;</span><br><span class="line">    iframeSrc.nodeValue = protocol;</span><br><span class="line">    iframe.setAttributeNode(iframeStyle);</span><br><span class="line">    iframe.setAttributeNode(iframeSrc);</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(iframe);</span><br><span class="line"></span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.body.removeChild(iframe);</span><br><span class="line">    &#125;, <span class="number">250</span>);</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Hybrid通信原理"><a href="#Hybrid通信原理" class="headerlink" title="Hybrid通信原理"></a>Hybrid通信原理</h3><p>背景：原生APP开发中有一个webview的组件(Android中是webview,iOS7以下有UIWebview,7以上有WKWebview),这个组件可以加载Html文件。</p><ul><li><p>IOS</p><ul><li>Object-C可直接调用js，只需调用stringByEvaluatingJavaScriptFromString即可，可直接获取js返回值。</li><li>js不可直接调用Object-C，利用 shouldStartLoadWithRequest，需拦截每个url，对指定的schema进行拦截做相应的本地方法。</li></ul></li><li><p>Android</p><ul><li>Java可直接调用js，但不可直接获取js返回值。</li><li>Java注册addJavascriptInterface 后，js可直接调用Native的接口，并获取Native的返回值。<a href="http://www.alloyteam.com/2013/02/rang-java-gen-javascript-geng-jia-qin-mi/" target="_blank" rel="noopener">让Java跟Javascript更加亲密</a></li><li>通过 shouldOverrideUrlLoading，也还是拦截Web的所有URL请求来达到通信的目的。</li></ul></li></ul><p><strong>基础通信存在以下问题</strong></p><ul><li><p>Android4.2以下,addJavascriptInterface方式有安全漏洞</p></li><li><p>iOS7以下,js无法调用Native</p></li></ul><h4 id="JS-Bridge"><a href="#JS-Bridge" class="headerlink" title="JS Bridge"></a>JS Bridge</h4><ul><li>url scheme交互方式是一套现有的成熟方案，可以完美兼容各种版本，不存在上述问题。</li></ul><p>通过JSBridge(JS和Native通信机制),H5页面可以调用Native的api,Native也可调用H5页面的方法或者通知H5页面回调。</p><p><img src="https://dailc.github.io/staticResource/blog/hybrid/jsbridge/img_hybrid_base_jsbridgePrinciple_1.png?_=5931322" alt="JSBridge的核心原理"></p><p>原理：<br>（1）初始化创建的一个style.display=none 的iframe,并将iframe.src设置为自有协议，每次js需要与Native通信时，js端主动调用iframe.src即可，Native收到请求通知后，反向调用fetchQueue(可见源码)获取消息内容；若Native需要与js通信，直接调用js，并获取返回值</p><p>（2）</p><ul><li><p>IOS<br>js-&gt;Native：js将要发送的消息存放在js端-&gt;调用iframe.src，触发通知Native-&gt;Native拦截请求，调用js bridge里面的fetchQueue并获取返回的消息内容，处理消息-&gt;将需要返回的数据通过直接调用js的方式，让js处理</p></li><li><p>Android<br>js-&gt;Native: 通过 shouldOverrideUrlLoading 携带Js的返回值<br>（3）Native-&gt;js: Native可直接调用Js并获取返回的内容</p></li></ul><p><a href="http://www.cnblogs.com/dailc/p/5930231.html" target="_blank" rel="noopener">连续五篇讲述Hybrid以及JSBridge解决方案</a></p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;!-- MarkdownTOC --&gt;
&lt;ul&gt;
&lt;li&gt;NativeApi思考&lt;ul&gt;
&lt;li&gt;以调用Native上传图片组件为例&lt;/li&gt;
&lt;li&gt;Hybrid通信原理&lt;ul&gt;
&lt;li&gt;JS Bridge&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /MarkdownTOC --&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="webview" scheme="https://wangchloe.vip/tags/webview/"/>
    
  </entry>
  
  <entry>
    <title>征服宝岛～</title>
    <link href="https://wangchloe.vip/2019/04/01/life6/"/>
    <id>https://wangchloe.vip/2019/04/01/life6/</id>
    <published>2019-03-31T19:12:48.000Z</published>
    <updated>2019-07-23T09:38:45.104Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>世界多大，老汪的脚步就迈多大！PS：🇨🇳台湾真好吃</p><a id="more"></a><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59wjj0d8wj31bq0u0e82.jpg" alt="史上超强自制攻略"></p><hr><p><img src="http://ww3.sinaimg.cn/large/006tNc79gy1g59wqi6df9j30rs15oaix.jpg" alt=""><br><img src="http://ww4.sinaimg.cn/large/006tNc79gy1g59wqi0bnnj30rs15owln.jpg" alt=""><br><img src="http://ww2.sinaimg.cn/large/006tNc79gy1g59wqhui4kj30rs15ogt1.jpg" alt=""><br><img src="http://ww2.sinaimg.cn/large/006tNc79gy1g59wqghp3uj30u00u0dlc.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/large/006tNc79gy1g59wqfxuvtj30u00u0wjj.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/large/006tNc79gy1g59wqfrqfej30rs15o12k.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59wqhp5r4j30u00u0thd.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/large/006tNc79gy1g59wqhighuj30u00u0gw4.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59wqgn8gyj30u00u047u.jpg" alt=""></p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;世界多大，老汪的脚步就迈多大！PS：🇨🇳台湾真好吃&lt;/p&gt;
    
    </summary>
    
      <category term="你好，陌生人" scheme="https://wangchloe.vip/categories/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E9%99%8C%E7%94%9F%E4%BA%BA/"/>
    
    
      <category term="爱旅游" scheme="https://wangchloe.vip/tags/%E7%88%B1%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>nextTick研究报告</title>
    <link href="https://wangchloe.vip/2018/10/12/blog42/"/>
    <id>https://wangchloe.vip/2018/10/12/blog42/</id>
    <published>2018-10-11T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:36.829Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><ul><li>nextTick<ul><li>es5源码</li><li>关于setTimeout(fn,0)</li></ul></li><li>讨论点</li><li>常用示例<ul><li>1.mounted时更新<ul><li>console</li></ul></li><li>2.更改子组件更新时间<ul><li>console</li></ul></li><li>3.同时更改父组件更新时间<ul><li>console</li></ul></li><li>4.nextTick顺序问题<ul><li>console</li></ul></li></ul></li><li>总结</li></ul><a id="more"></a><hr><h2 id="nextTick"><a href="#nextTick" class="headerlink" title="nextTick"></a>nextTick</h2><p>在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。</p><blockquote><p>vue这么做是因为频繁的更新dom是特别耗费性能的，所以搞了一个批处理更新，把所有的update操作放到任务队列中，等主线程中执行栈的所有同步任务执行完毕，系统就会读取任务队列。</p></blockquote><h3 id="es5源码"><a href="#es5源码" class="headerlink" title="es5源码"></a>es5源码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Defer a task to execute it asynchronously.</span></span><br><span class="line"><span class="comment"> * 异步更新队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> nextTick = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> callbacks = [];</span><br><span class="line">    <span class="keyword">var</span> pending = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> timerFunc;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">nextTickHandler</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        pending = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> copies = callbacks.slice(<span class="number">0</span>);</span><br><span class="line">        callbacks.length = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; copies.length; i++) &#123;</span><br><span class="line">            copies[i]();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 只要观察到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据改变。</span></span><br><span class="line">    <span class="comment">// 如果同一个 watcher 被多次触发，只会被推入到队列中一次。</span></span><br><span class="line">    <span class="comment">// 这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作上非常重要。</span></span><br><span class="line">    <span class="comment">// 然后，在下一个的事件循环“tick”中，Vue 刷新队列并执行实际 (已去重的) 工作。</span></span><br><span class="line">    <span class="comment">// Vue 在内部尝试对异步队列使用原生的 Promise.then 和 MessageChannel，如果执行环境不支持，会采用 setTimeout(fn, 0) 代替。</span></span><br><span class="line">    timerFunc = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        setTimeout(nextTickHandler, <span class="number">0</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">queueNextTick</span>(<span class="params">cb, ctx</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> _resolve;</span><br><span class="line">        callbacks.push(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (cb) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    cb.call(ctx);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                    handleError(e, ctx, <span class="string">'nextTick'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (_resolve) &#123;</span><br><span class="line">                _resolve(ctx);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span> (!pending) &#123;</span><br><span class="line">            pending = <span class="literal">true</span>;</span><br><span class="line">            timerFunc();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line">Vue.prototype.$nextTick = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> nextTick(fn, <span class="keyword">this</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="关于setTimeout-fn-0"><a href="#关于setTimeout-fn-0" class="headerlink" title="关于setTimeout(fn,0)"></a>关于setTimeout(fn,0)</h3><p><a href="https://juejin.im/entry/58d4df3b5c497d0057eb99ff" target="_blank" rel="noopener">理解 JavaScript 中的 macrotask 和 microtask</a></p><blockquote><p> JavaScript 主线程拥有一个 <code>执行栈</code> 以及一个 <code>任务队列</code>，主线程会依次执行代码，当遇到函数时，会先将<code>函数 入栈</code>，函数运行完毕后再将该<code>函数 出栈</code>，直到所有代码执行完毕。</p></blockquote><ul><li>macrotasks: setTimeout, setInterval, setImmediate, I/O, UI rendering</li><li>microtasks: process.nextTick, Promises, Object.observe(废弃), MutationObserver</li></ul><blockquote><p>在每一次事件循环中，macrotask 只会提取一个执行，而 microtask 会一直提取，直到 microtasks 队列清空。</p></blockquote><h2 id="讨论点"><a href="#讨论点" class="headerlink" title="讨论点"></a>讨论点</h2><ul><li>父组件nextTick的触发在子组件DOM完成前还是完成后？</li></ul><h2 id="常用示例"><a href="#常用示例" class="headerlink" title="常用示例"></a>常用示例</h2><p><a href="https://codepen.io/WangChloe/pen/JmEbxb" target="_blank" rel="noopener">codepen示例</a></p><ul><li>DOM</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"J_app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-mounted时更新"><a href="#1-mounted时更新" class="headerlink" title="1.mounted时更新"></a>1.mounted时更新</h3><ul><li>父组件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">"#J_app"</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            title: <span class="string">"父组件"</span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeCreate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例初始化之后</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件beforeCreate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例创建完成之后被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件created"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeMount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 在挂载开始之前被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件beforeMount"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeUpdate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新时调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件beforeUpdate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        updated: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新之后调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件updated"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        mounted: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// el被新创建的vm.$el替换，挂载到实例上</span></span><br><span class="line">            <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件mounted"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.$nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"父组件nextTick"</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            that.title = <span class="string">"父组件更新"</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件更新"</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><ul><li>子组件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tpl = <span class="string">"&lt;h4&gt;&#123;&#123;subtitle&#125;&#125;&lt;/h4&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    Vue.component(<span class="string">'item'</span>, &#123;</span><br><span class="line">        data: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                subtitle: <span class="string">"子组件"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        props: [],</span><br><span class="line">        template: tpl,</span><br><span class="line">        beforeCreate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例初始化之后</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件beforeCreate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例创建完成之后被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件created"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeMount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 在挂载开始之前被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件beforeMount"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeUpdate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新时调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件beforeUpdate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        updated: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新之后调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件updated"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        mounted: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// el被新创建的vm.$el替换，挂载到实例上</span></span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件mounted"</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.$nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"子组件nextTick"</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            that.subtitle = <span class="string">"子组件更新"</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件更新"</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h4 id="console"><a href="#console" class="headerlink" title="console"></a>console</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">父组件beforeCreate</span><br><span class="line">父组件created</span><br><span class="line">父组件beforeMount</span><br><span class="line">子组件beforeCreate</span><br><span class="line">子组件created</span><br><span class="line">子组件beforeMount</span><br><span class="line">子组件mounted</span><br><span class="line">子组件更新</span><br><span class="line">当前页面content:子组件</span><br><span class="line">父组件mounted</span><br><span class="line">父组件更新</span><br><span class="line">当前页面content:父组件 子组件</span><br><span class="line">子组件nextTick</span><br><span class="line">当前页面content:子组件</span><br><span class="line">父组件beforeUpdate</span><br><span class="line">子组件beforeUpdate</span><br><span class="line">子组件updated</span><br><span class="line">父组件updated</span><br><span class="line">父组件nextTick</span><br><span class="line">当前页面content:父组件更新 子组件更新</span><br></pre></td></tr></table></figure><p><img src="https://ws4.sinaimg.cn/large/006tNbRwgy1fw0xto1eidj30wn0a80t4.jpg" alt=""></p><blockquote><p>nextTick写在数据更改前不能拿到更新后的数据。</p></blockquote><h3 id="2-更改子组件更新时间"><a href="#2-更改子组件更新时间" class="headerlink" title="2.更改子组件更新时间"></a>2.更改子组件更新时间</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tpl = <span class="string">"&lt;h4&gt;&#123;&#123;subtitle&#125;&#125;&lt;/h4&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    Vue.component(<span class="string">'item'</span>, &#123;</span><br><span class="line">        data: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                subtitle: <span class="string">"子组件"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        props: [],</span><br><span class="line">        template: tpl,</span><br><span class="line">        beforeCreate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例初始化之后</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件beforeCreate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例创建完成之后被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件created"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeMount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 在挂载开始之前被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件beforeMount"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeUpdate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新时调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件beforeUpdate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        updated: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新之后调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件updated"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        mounted: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// el被新创建的vm.$el替换，挂载到实例上</span></span><br><span class="line">            <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件mounted"</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.$nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"子组件nextTick"</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                that.subtitle = <span class="string">"子组件更新"</span>;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"子组件更新"</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h4 id="console-1"><a href="#console-1" class="headerlink" title="console"></a>console</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">父组件beforeCreate</span><br><span class="line">父组件created</span><br><span class="line">父组件beforeMount</span><br><span class="line">子组件beforeCreate</span><br><span class="line">子组件created</span><br><span class="line">子组件beforeMount</span><br><span class="line">子组件mounted</span><br><span class="line">父组件mounted</span><br><span class="line">父组件更新</span><br><span class="line">当前页面content:父组件 子组件</span><br><span class="line">子组件nextTick</span><br><span class="line">当前页面content:子组件</span><br><span class="line">父组件nextTick</span><br><span class="line">当前页面content:父组件 子组件</span><br><span class="line">父组件beforeUpdate</span><br><span class="line">父组件updated</span><br><span class="line"></span><br><span class="line">子组件更新</span><br><span class="line">当前页面content:子组件</span><br><span class="line">子组件beforeUpdate</span><br><span class="line">子组件updated</span><br></pre></td></tr></table></figure><p><img src="https://ws3.sinaimg.cn/large/006tNbRwgy1fw0xu13un4j30wn0b6jrs.jpg" alt=""></p><blockquote><p>若子组件在mounted即更新，子组件的update动作会在父组件的beforeUpdate之后updated之前执行。<br>反之则更新后子组件自己执行update，并且由于父组件nextTick写在数据更改之前，导致先执行父组件nextTick再执行父组件的update动作。</p></blockquote><h3 id="3-同时更改父组件更新时间"><a href="#3-同时更改父组件更新时间" class="headerlink" title="3.同时更改父组件更新时间"></a>3.同时更改父组件更新时间</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">"#J_app"</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            title: <span class="string">"父组件"</span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeCreate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例初始化之后</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件beforeCreate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例创建完成之后被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件created"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeMount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 在挂载开始之前被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件beforeMount"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeUpdate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新时调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件beforeUpdate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        updated: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新之后调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件updated"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        mounted: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// el被新创建的vm.$el替换，挂载到实例上</span></span><br><span class="line">            <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件mounted"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.$nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"父组件nextTick"</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                that.title = <span class="string">"父组件更新"</span>;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"父组件更新"</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h4 id="console-2"><a href="#console-2" class="headerlink" title="console"></a>console</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">父组件beforeCreate</span><br><span class="line">父组件created</span><br><span class="line">父组件beforeMount</span><br><span class="line">子组件beforeCreate</span><br><span class="line">子组件created</span><br><span class="line">子组件beforeMount</span><br><span class="line">子组件mounted</span><br><span class="line">父组件mounted</span><br><span class="line">子组件nextTick</span><br><span class="line">当前页面content:子组件</span><br><span class="line">父组件nextTick</span><br><span class="line">当前页面content:父组件 子组件</span><br><span class="line"></span><br><span class="line">子组件更新</span><br><span class="line">当前页面content:子组件</span><br><span class="line">子组件beforeUpdate</span><br><span class="line">子组件updated</span><br><span class="line">父组件更新</span><br><span class="line">当前页面content:父组件 子组件更新</span><br><span class="line">父组件beforeUpdate</span><br><span class="line">父组件updated</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/006tNbRwgy1fw0y07buyqj30wn0b6mxk.jpg" alt=""></p><blockquote><p>若父、子组件的更新延时相同，则会各自执行各自的update动作，子组件优先。</p></blockquote><h3 id="4-nextTick顺序问题"><a href="#4-nextTick顺序问题" class="headerlink" title="4.nextTick顺序问题"></a>4.nextTick顺序问题</h3><p><strong>nextTick应写在数据更改后</strong></p><ul><li>父组件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">"#J_app"</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            title: <span class="string">"父组件"</span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeCreate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例初始化之后</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件beforeCreate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例创建完成之后被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件created"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeMount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 在挂载开始之前被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件beforeMount"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeUpdate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新时调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件beforeUpdate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        updated: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新之后调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件updated"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        mounted: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// el被新创建的vm.$el替换，挂载到实例上</span></span><br><span class="line">            <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件mounted"</span>);</span><br><span class="line"></span><br><span class="line">            that.title = <span class="string">"父组件更新"</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"父组件已更新"</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.$nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"父组件nextTick"</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><ul><li>子组件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tpl = <span class="string">"&lt;h4&gt;&#123;&#123;subtitle&#125;&#125;&lt;/h4&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    Vue.component(<span class="string">'item'</span>, &#123;</span><br><span class="line">        data: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                subtitle: <span class="string">"子组件"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        props: [],</span><br><span class="line">        template: tpl,</span><br><span class="line">        beforeCreate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例初始化之后</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件beforeCreate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 实例创建完成之后被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件created"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeMount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 在挂载开始之前被调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件beforeMount"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        beforeUpdate: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新时调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件beforeUpdate"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        updated: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新之后调用</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件updated"</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        mounted: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件mounted"</span>)</span><br><span class="line"></span><br><span class="line">            that.subtitle = <span class="string">"子组件更新"</span>;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"子组件已更新"</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.$nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"子组件nextTick"</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"当前页面content:"</span> + that.$el.textContent);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h4 id="console-3"><a href="#console-3" class="headerlink" title="console"></a>console</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">父组件beforeCreate</span><br><span class="line">父组件created</span><br><span class="line">父组件beforeMount</span><br><span class="line">子组件beforeCreate</span><br><span class="line">子组件created</span><br><span class="line">子组件beforeMount</span><br><span class="line">子组件mounted</span><br><span class="line">子组件已更新</span><br><span class="line">当前页面content:子组件</span><br><span class="line">父组件mounted</span><br><span class="line">父组件已更新</span><br><span class="line">当前页面content:父组件 子组件</span><br><span class="line">父组件beforeUpdate</span><br><span class="line">子组件beforeUpdate</span><br><span class="line">子组件updated</span><br><span class="line">父组件updated</span><br><span class="line">子组件nextTick</span><br><span class="line">当前页面content:子组件更新</span><br><span class="line">父组件nextTick</span><br><span class="line">当前页面content:父组件更新 子组件更新</span><br></pre></td></tr></table></figure><p><img src="https://ws4.sinaimg.cn/large/006tNbRwgy1fw0x1a7prjj30xh0b2mxj.jpg" alt=""></p><blockquote><p>如果子组件nextTick写在数据更改前，则会在父组件mouted之后beforeUpdate之前执行nextTick。实际应在updated之后执行nextTick，这样nextTick才能拿到最新的数据。</p></blockquote><ul><li>推荐在updated中执行$nextTick</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">updated: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 数据更新之后调用</span></span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"组件updated"</span>);</span><br><span class="line">    <span class="keyword">this</span>.$nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"组件nextTick"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>父组件nextTick的触发在<strong>子组件updated后</strong>。</p></li><li><p>若子组件在mounted即更新，子组件的update动作会在父组件的beforeUpdate之后updated之前执行。<strong>反之则更新后子组件自己执行update，不会影响父组件的nextTick</strong>。</p></li><li><p>若父、子组件的更新延时相同，则会各自执行各自的update动作，<strong>子组件优先</strong>。</p></li><li><p>nextTick都需写在各自<strong>组件的updated之后</strong>。</p></li></ul><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！</p><p>公众号不发文的时候推送一些我觉得好用的前端网站或者看到的一些问题的解决方案，也更便于大家交流，就酱。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;nextTick&lt;ul&gt;
&lt;li&gt;es5源码&lt;/li&gt;
&lt;li&gt;关于setTimeout(fn,0)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;讨论点&lt;/li&gt;
&lt;li&gt;常用示例&lt;ul&gt;
&lt;li&gt;1.mounted时更新&lt;ul&gt;
&lt;li&gt;console&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2.更改子组件更新时间&lt;ul&gt;
&lt;li&gt;console&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3.同时更改父组件更新时间&lt;ul&gt;
&lt;li&gt;console&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;4.nextTick顺序问题&lt;ul&gt;
&lt;li&gt;console&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;总结&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://wangchloe.vip/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>北京5日游攻略～</title>
    <link href="https://wangchloe.vip/2018/09/21/life2/"/>
    <id>https://wangchloe.vip/2018/09/21/life2/</id>
    <published>2018-09-20T19:12:48.000Z</published>
    <updated>2019-07-23T09:32:40.946Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>手绘导览图，侬晓得伐</p><a id="more"></a><p><a href="https://www.jianshu.com/p/1204cbd915be" target="_blank" rel="noopener">北京5日游攻略～</a></p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;手绘导览图，侬晓得伐&lt;/p&gt;
    
    </summary>
    
      <category term="你好，陌生人" scheme="https://wangchloe.vip/categories/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E9%99%8C%E7%94%9F%E4%BA%BA/"/>
    
    
      <category term="爱旅游" scheme="https://wangchloe.vip/tags/%E7%88%B1%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>小厨教你做鸡蛋灌饼</title>
    <link href="https://wangchloe.vip/2018/03/29/life5/"/>
    <id>https://wangchloe.vip/2018/03/29/life5/</id>
    <published>2018-03-28T19:12:48.000Z</published>
    <updated>2019-07-23T09:24:10.278Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><strong>公众号又开新功能了，所以我又发了篇做饭教程，这次是老汪鸡蛋灌饼🥚！</strong></p><a id="more"></a><hr><p><a href="https://www.jianshu.com/p/ee03cef7fd7a" target="_blank" rel="noopener">无媛无故-小厨教你做鸡蛋灌饼</a></p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;公众号又开新功能了，所以我又发了篇做饭教程，这次是老汪鸡蛋灌饼🥚！&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="你好，陌生人" scheme="https://wangchloe.vip/categories/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E9%99%8C%E7%94%9F%E4%BA%BA/"/>
    
    
      <category term="爱做饭" scheme="https://wangchloe.vip/tags/%E7%88%B1%E5%81%9A%E9%A5%AD/"/>
    
  </entry>
  
  <entry>
    <title>2017-D2前端技术论坛 新思</title>
    <link href="https://wangchloe.vip/2018/01/02/blog41/"/>
    <id>https://wangchloe.vip/2018/01/02/blog41/</id>
    <published>2018-01-01T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:37.857Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ul><li>天猫超市Mobile Web的极致体验优化<ul><li>回归web解决问题</li><li>web目前的不足</li><li>解决方向</li></ul></li></ul><a id="more"></a><hr><ul><li><a href="http://d2forum.alibaba-inc.com/#/index?_k=ux8vkk" target="_blank" rel="noopener">2017-D2</a></li></ul><blockquote><p><strong>匠心</strong> -&gt; <code>工匠精神</code> <code>简单的事做好</code> <code>简单的事做的更好</code></p></blockquote><h2 id="天猫超市Mobile-Web的极致体验优化"><a href="#天猫超市Mobile-Web的极致体验优化" class="headerlink" title="天猫超市Mobile Web的极致体验优化"></a>天猫超市Mobile Web的极致体验优化</h2><ul><li><a href="https://chaoshi.m.tmall.com/" target="_blank" rel="noopener">天猫超市</a></li></ul><h3 id="回归web解决问题："><a href="#回归web解决问题：" class="headerlink" title="回归web解决问题："></a>回归web解决问题：</h3><ul><li>滚动过程代码冻结(Native解决)<ul><li>WKWebview(ios8+) 替代 UIWebview组件<ul><li>在性能、稳定性、功能方面有很大提升<br>（最直观的体现就是加载网页是占用的内存，模拟器加载百度与开源中国网站时，WKWebView占用23M，而UIWebView占用85M）</li><li>允许JavaScript的Nitro引擎库加载并使用（UIWebView中限制）</li><li>支持了更多的HTML5特性</li><li>高达60fps的滚动刷新率以及内置手势</li><li>将UIWebViewDelegate与UIWebView重构成了14类与3个协议</li></ul></li><li>浏览器内核U4<ul><li>极速引擎，采用全新的V8引擎，在U4 1.0的基础上，性能继续提高10%，重新打开网页的速度提高10%-20%；</li><li>全新的渲染架构，新的Passive Event Listener、Intersection Observer等能力赋予H5页面更加流畅的操作体验；</li><li>标准领先，新内核支持最新的PWA技术以及其他最新的H5、JS、CSS标准，并在国内首次提供标准Web推送服务；</li><li>创新扩展，推出业界效率最高的Web AR技术，兼顾Native的体验和H5的高效率，还有其他更多的创新扩展值得期待。</li></ul></li></ul></li><li>加载慢<ul><li>预加载</li></ul></li><li>页头无法定制<ul><li>隐藏native页头，使用h5页头</li></ul></li></ul><h3 id="web目前的不足"><a href="#web目前的不足" class="headerlink" title="web目前的不足"></a>web目前的不足</h3><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fmumfdhjmmj315k09sjv1.jpg" alt="web目前的不足"></p><h3 id="解决方向"><a href="#解决方向" class="headerlink" title="解决方向"></a>解决方向</h3><h4 id="精细化"><a href="#精细化" class="headerlink" title="精细化"></a>精细化</h4><ul><li>还原度</li><li>字行高</li><li>Android文字垂直居中<ul><li>非miui下都是偏上的<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:-webkit-box;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">-webkit-box-pack</span>:center; <span class="comment">/*水平居中*/</span></span><br><span class="line">    <span class="attribute">-webkit-box-align</span>:center; <span class="comment">/*垂直居中*/</span></span><br><span class="line">    <span class="attribute">align-items</span>:center; <span class="comment">/*垂直居中*/</span></span><br><span class="line">    <span class="attribute">justify-content</span>:center; <span class="comment">/*水平居中*/</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">2rem</span>;</span><br><span class="line">    <span class="attribute">height</span>:.<span class="number">3rem</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:.<span class="number">24rem</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="操作体验"><a href="#操作体验" class="headerlink" title="操作体验"></a>操作体验</h4><ul><li>极速响应 100ms内响应用户操作<ul><li>并行加载资源和数据 <strong>Promise.all()</strong></li><li>足够快时不需要loading<br><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fmvc87pt71j31660t6qfn.jpg" alt="足够快时不需要loading"></li></ul></li><li>实时反馈<ul><li>切换tabview时下边框线实时响应手势过程</li></ul></li><li><p>操作流畅</p><ul><li>动画<ul><li>只使用<strong>transform 3D/opacity</strong></li><li>适时使用<strong>will-change</strong>  <code>will-change:transform; /*创建新的渲染层*/</code> <ul><li><a href="http://blog.csdn.net/caicaijingyuan/article/details/44244991" target="_blank" rel="noopener">-webkit-transform:translate3d(0,0,0)触发GPU加速，让网页动画更流畅</a></li><li><a href="http://www.zhangxinxu.com/wordpress/2015/11/css3-will-change-improve-paint/" target="_blank" rel="noopener">使用CSS3 will-change提高页面滚动、动画等渲染性能</a><br><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fms39ippvyj31ia0cmtdi.jpg" alt="translate3d &amp; will-change"></li></ul></li></ul></li><li><p>滚动</p><ul><li><p>必须使用<strong>passive event listeners</strong></p><blockquote><p>由于浏览器无法预先知道一个事件处理函数中会不会调用 preventDefault()，它需要等到事件处理函数执行完后，才能去执行默认行为，若监听完后再执行默认行为会导致页面卡顿。</p></blockquote><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fmundaoz61j3132072q65.jpg" alt="passive event listeners"></p><ul><li>我们可以通过传递 passive 为 true 来明确告诉浏览器，事件处理程序不会调用 preventDefault 来阻止默认滑动行为。</li><li><a href="https://segmentfault.com/a/1190000007913386?_ea=1507605" target="_blank" rel="noopener">移动Web滚动性能优化: Passive event listeners</a></li><li>Chrome 51 和 Firefox 49 已经支持 passive 属性<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> supportsPassive = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> opts = <span class="built_in">Object</span>.defineProperty(&#123;&#125;, <span class="string">'passive'</span>, &#123;</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      supportsPassive = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">"test"</span>, <span class="literal">null</span>, opts);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">elem.addEventListener(</span><br><span class="line">  <span class="string">'touchstart'</span>,</span><br><span class="line">  fn,</span><br><span class="line">  supportsPassive ? &#123; <span class="attr">passive</span>: <span class="literal">true</span> &#125; : <span class="literal">false</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>手势</p><ul><li>配合使用touchmove &amp; scroll 事件<blockquote><p>ios第一次触发scroll存在延时，应配合使用touchmove</p></blockquote></li></ul></li></ul></li></ul><h4 id="可靠性"><a href="#可靠性" class="headerlink" title="可靠性"></a>可靠性</h4><ul><li><p>预加载</p><ul><li><p>service worker实现离线页面访问<br><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fmuo9a47zpj312w0lsdjk.jpg" alt="service worker push"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注册 service worker</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">'serviceWorker'</span> <span class="keyword">in</span> navigator) &#123;</span><br><span class="line">    navigator.serviceWorker.register(<span class="string">'./service-worker.js'</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">registration</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 注册成功</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'ServiceWorker registration successful with scope: '</span>, registration.scope);</span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 注册失败</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'ServiceWorker registration failed: '</span>, err);</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cacheVersion = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> currentCache = &#123;</span><br><span class="line">  offline: <span class="string">'offline-cache'</span> + cacheVersion</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> offlineUrl = <span class="string">'offline.html'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 首次缓存</span></span><br><span class="line"><span class="keyword">this</span>.addEventListener(<span class="string">'install'</span>, event =&gt; &#123;</span><br><span class="line">  event.waitUntil(</span><br><span class="line">    caches.open(currentCache.offline).then(<span class="function"><span class="keyword">function</span>(<span class="params">cache</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> cache.addAll([</span><br><span class="line">          <span class="string">'./offline.svg'</span>,</span><br><span class="line">          offlineUrl</span><br><span class="line">      ]);</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拦截请求</span></span><br><span class="line"><span class="keyword">this</span>.addEventListener(<span class="string">'fetch'</span>, event =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (event.request.mode === <span class="string">'navigate'</span> || (event.request.method === <span class="string">'GET'</span> &amp;&amp; event.request.headers.get(<span class="string">'accept'</span>).includes(<span class="string">'text/html'</span>))) &#123;</span><br><span class="line">        event.respondWith(</span><br><span class="line">          fetch(event.request.url).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="comment">// Return the offline page</span></span><br><span class="line">              <span class="keyword">return</span> caches.match(offlineUrl);</span><br><span class="line">        &#125;)</span><br><span class="line">     );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">        event.respondWith(caches.match(event.request)</span><br><span class="line">                        .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> response || fetch(event.request);</span><br><span class="line">                    &#125;)</span><br><span class="line">            );</span><br><span class="line">      &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li></ul><pre><code>![service workder兼容性](https://ws2.sinaimg.cn/large/006tKfTcly1fmvb3ae3whj31ae0g277h.jpg)</code></pre><h4 id="设计语言APP化"><a href="#设计语言APP化" class="headerlink" title="设计语言APP化"></a>设计语言APP化</h4><ul><li>无闪烁tabbar<br><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fmunohp8a1j316w0lg1kx.jpg" alt="设计语言APP化"></li></ul><blockquote><p>PS:同行者</p><ul><li>业务线庞大</li><li>技术纬度不同</li></ul></blockquote><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！</p><p>公众号不发文的时候推送一些我觉得好用的前端网站或者看到的一些问题的解决方案，也更便于大家交流，就酱。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;天猫超市Mobile Web的极致体验优化&lt;ul&gt;
&lt;li&gt;回归web解决问题&lt;/li&gt;
&lt;li&gt;web目前的不足&lt;/li&gt;
&lt;li&gt;解决方向&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="前端论坛" scheme="https://wangchloe.vip/tags/%E5%89%8D%E7%AB%AF%E8%AE%BA%E5%9D%9B/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：目录</title>
    <link href="https://wangchloe.vip/2017/06/03/blog40/"/>
    <id>https://wangchloe.vip/2017/06/03/blog40/</id>
    <published>2017-06-02T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:38.780Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><a id="more"></a><hr><ul><li>blog1<ul><li><ol><li>js六大数据类型</li></ol></li><li><ol start="2"><li>数据类型补充</li></ol></li><li><ol start="3"><li>数字相关判断方法</li></ol></li><li><ol start="4"><li>变量</li></ol></li><li><ol start="5"><li>运算符</li></ol></li><li><ol start="6"><li>常见变量命名前缀</li></ol></li><li><ol start="7"><li>字符串转化为数字</li></ol></li><li><ol start="8"><li>数字转化为字符串</li></ol></li><li><ol start="9"><li>if语句变形</li></ol></li><li><ol start="10"><li><strong>js</strong>及<strong>事件</strong>的笼统概念</li></ol></li></ul></li><li>blog2<ul><li><ol><li>js操作元素属性</li></ol></li><li><ol start="2"><li>js设置复杂样式</li></ol></li><li><ol start="3"><li>物体从中心放大</li></ol></li><li><ol start="4"><li>a链接防止刷新</li></ol></li><li><ol start="5"><li>循环添加事件，事件中的循环变量不能用</li></ol></li><li><ol start="6"><li>浏览器加载的过程</li></ol></li><li><ol start="7"><li>DOM获取元素方法</li></ol></li><li><ol start="8"><li>js中的真假</li></ol></li><li><ol start="9"><li>获取元素当前样式(兼容)</li></ol></li><li><ol start="10"><li>获取一个n~m之间的随机数(n&lt;m，且不包括m)</li></ol></li></ul></li><li>blog3<ul><li><ol><li>返回值问题(return)</li></ol></li><li><ol start="2"><li>undefined出现的情况</li></ol></li><li><ol start="3"><li>eval(字符串)</li></ol></li><li><ol start="4"><li>数字小于10的补零函数</li></ol></li><li><ol start="5"><li>定时器</li></ol></li><li><ol start="6"><li>日期对象</li></ol></li><li><ol start="7"><li>日期对象应用</li></ol></li><li><ol start="8"><li>事件函数相同可以合并</li></ol></li><li><ol start="9"><li>this</li></ol></li><li><ol start="10"><li>闭包</li></ol></li></ul></li><li>blog4<ul><li><ol><li>参数的数组arguments</li></ol></li><li><ol start="2"><li>设置样式的三种方法</li></ol></li><li><ol start="3"><li>字符串的相关方法</li></ol></li><li><ol start="4"><li>字符串比较</li></ol></li><li><ol start="5"><li>字符串应用</li></ol></li><li><ol start="6"><li>定义数组</li></ol></li><li><ol start="7"><li>数组的相关方法</li></ol></li><li><ol start="8"><li>json(object类型)</li></ol></li><li><ol start="9"><li>Math方法</li></ol></li><li><ol start="10"><li>try-catch捕获异常</li></ol></li></ul></li><li>blog5(数组应用)<ul><li><ol><li>数组翻转方法2</li></ol></li><li><ol start="2"><li>首字母大写</li></ol></li><li>3.快速清空数组</li><li><ol start="4"><li>数组排序方法</li></ol></li><li><ol start="5"><li>数组内查找元素是否存在</li></ol></li><li><ol start="6"><li>数组去重的多种方法</li></ol></li><li>补一个字符串的应用</li></ul></li><li>blog6<ul><li><ol><li>select下拉框的相关属性</li></ol></li><li><ol start="2"><li>预解析</li></ol></li><li><ol start="3"><li>已知计算机编码查看对应单词</li></ol></li><li><ol start="4"><li>字节长度和编码的关系</li></ol></li><li><ol start="5"><li>严格模式</li></ol></li><li><ol start="6"><li>连等及逗号运算符</li></ol></li><li><ol start="7"><li>文本提示框</li></ol></li><li><ol start="8"><li>form表单</li></ol></li></ul></li><li>blog7(js组成)<ul><li><ol><li>js实现的组成</li></ol></li><li><ol start="2"><li>DOM节点关系</li></ol></li><li><ol start="3"><li>DOM节点操作</li></ol></li><li><ol start="4"><li>DOM属性操作</li></ol></li><li><ol start="5"><li>BOM</li></ol></li></ul></li><li>blog8(各种宽高，距离)<ul><li><ol><li>滚动距离</li></ol></li><li><ol start="2"><li>滚动高度</li></ol></li><li><ol start="3"><li>可视区高度</li></ol></li><li><ol start="4"><li>物体高度</li></ol></li><li><ol start="5"><li>offsetHeight &amp;&amp; getStyle()</li></ol></li><li><ol start="6"><li>物体的相对距离</li></ol></li><li><ol start="7"><li>关于父级</li></ol></li><li><ol start="8"><li>封装一个物体距离左边/上边的绝对位置的函数</li></ol></li></ul></li><li>blog9(事件篇)<ul><li><ol><li>事件对象</li></ol></li><li><ol start="2"><li>事件冒泡</li></ol></li><li><ol start="3"><li>事件绑定</li></ol></li><li><ol start="4"><li>关于捕获(这点理解不是很到位)</li></ol></li><li><ol start="5"><li>事件解绑</li></ol></li><li><ol start="6"><li>查看鼠标点击位置</li></ol></li><li><ol start="7"><li>键盘事件</li></ol></li><li><ol start="8"><li>鼠标事件</li></ol></li><li><ol start="9"><li>domReady</li></ol></li><li><ol start="10"><li>事件委托</li></ol></li><li><ol start="11"><li>事件源</li></ol></li></ul></li><li>blog10(原生运动框架)<ul><li>move.js</li></ul></li><li>blog11(move框架应用) (上)<ul><li><ol><li>仿jiaThis分享到</li></ol></li><li><ol start="2"><li>幻灯片</li></ol></li><li><ol start="3"><li>手风琴</li></ol></li><li><ol start="4"><li>多图片展开</li></ol></li></ul></li><li>blog12(move框架应用) (中)<ul><li><ol start="5"><li>运动时钟</li></ol></li><li><ol start="6"><li>返回顶部</li></ol></li><li><ol start="7"><li>无缝滚动</li></ol></li><li><ol start="8"><li>无缝幻灯片</li></ol></li><li><ol start="9"><li>带进度条的无缝幻灯片</li></ol></li></ul></li><li>blog13(move框架应用) (下)<ul><li><ol start="10"><li>打字依次显示效果</li></ol></li><li><ol start="11"><li>收起当前页放出下一页效果</li></ol></li><li><ol start="12"><li>分块运动</li></ol></li><li><ol start="13"><li>仿Mac 感应变大效果</li></ol></li></ul></li><li>blog14(前端规范)<ul><li><ol><li>Reset.css &amp;&amp; Normailze.css</li></ol></li><li><ol start="2"><li>css命名规范</li></ol></li><li><ol start="3"><li>注释的写法</li></ol></li><li><ol start="4"><li>id命名</li></ol></li><li><ol start="5"><li>class的命名</li></ol></li><li><ol start="6"><li>css层次</li></ol></li><li><ol start="7"><li>css书写次序</li></ol></li><li><ol start="8"><li>媒体查询(media)屏幕宽度</li></ol></li><li><ol start="9"><li>js常见变量命名</li></ol></li></ul></li><li>blog15(原生篇6) cookie、Require、数据交互前导<ul><li><ol><li>cookie</li></ol></li><li><ol start="2"><li>模块化</li></ol></li><li><ol start="3"><li>Require.js</li></ol></li><li><ol start="4"><li>数据交互</li></ol></li><li><ol start="5"><li>eval的替代用法</li></ol></li><li><ol start="6"><li>数据交互时输入中文问题</li></ol></li></ul></li><li>blog16(ajax jsonp)<ul><li><ol><li>Ajax前导</li></ol></li><li><ol start="2"><li>Ajax</li></ol></li><li><ol start="3"><li>Ajax服务器相关</li></ol></li><li><ol start="4"><li>Ajax2.0事件</li></ol></li><li><ol start="5"><li>关于锚点hash</li></ol></li><li><ol start="6"><li>Ajax跨域</li></ol></li><li><ol start="7"><li>jsonp前导</li></ol></li><li><ol start="8"><li>jsonp</li></ol></li><li><ol start="9"><li>跨浏览器的CORS</li></ol></li></ul></li><li>blog17(jQuery上)<ul><li><ol><li>jQuery &amp;&amp; js</li></ol></li><li><ol start="2"><li>jQuery效果</li></ol></li><li><ol start="3"><li>jQuery选择器</li></ol></li><li><ol start="4"><li>jQuery操作css属性</li></ol></li><li><ol start="5"><li>jQuery操作内容</li></ol></li><li><ol start="6"><li>jQuery操作类名</li></ol></li><li><ol start="7"><li>jQuery操作属性</li></ol></li><li><ol start="8"><li>jQuery DOM</li></ol></li><li><ol start="9"><li>jQuery事件</li></ol></li></ul></li><li>blog18(jQuery下)<ul><li><ol><li>jQuery获取物体信息</li></ol></li><li><ol start="2"><li>jQuery筛选</li></ol></li><li><ol start="3"><li>jQuery  js</li></ol></li><li><ol start="4"><li>jQuery链式运动</li></ol></li><li><ol start="5"><li>jQuery循环</li></ol></li><li><ol start="6"><li>jQuery工具</li></ol></li><li><ol start="7"><li>jQuery Ajax</li></ol></li><li><ol start="8"><li>jQuery jsonp</li></ol></li><li><ol start="9"><li>jQuery插件</li></ol></li></ul></li><li>blog19(正则)<ul><li><ol><li>正则表达式</li></ol></li><li><ol start="2"><li>正则定义的多种方法</li></ol></li><li><ol start="3"><li>正则校验</li></ol></li><li><ol start="4"><li>正则使用的字符串相关方法</li></ol></li><li><ol start="5"><li>特殊字符</li></ol></li><li><ol start="6"><li>元字符(一个字符)</li></ol></li><li><ol start="7"><li>限定符</li></ol></li><li><ol start="8"><li>转义字符</li></ol></li><li>9.单词边界</li><li><ol start="10"><li>简单示例</li></ol></li></ul></li><li>blog20(正则应用)<ul><li><ol><li>校验座机号码</li></ol></li><li><ol start="2"><li>校验邮箱</li></ol></li><li><ol start="3"><li>校验年龄(18-100)</li></ol></li><li><ol start="4"><li>仿trim()去除首尾空格</li></ol></li><li><ol start="5"><li>校验名字</li></ol></li><li><ol start="6"><li>首字母大写</li></ol></li><li><ol start="7"><li>过滤标签</li></ol></li><li><ol start="8"><li>正则getByClass等方法</li></ol></li></ul></li><li>blog21(性能优化)<ul><li><ol><li>性能优化</li></ol></li><li><ol start="2"><li>重排 &amp;&amp; 重绘</li></ol></li><li><ol start="3"><li>图层</li></ol></li><li><ol start="4"><li>执行性能优化</li></ol></li><li><ol start="5"><li>网络性能优化</li></ol></li><li><ol start="6"><li>垃圾回收 GC(Gabage Collection)</li></ol></li><li><ol start="7"><li>递归</li></ol></li></ul></li><li>blog22(面向对象)<ul><li><ol><li>面向对象</li></ol></li><li><ol start="2"><li>引用类型</li></ol></li><li><ol start="3"><li>创建对象前导</li></ol></li></ul></li><li>blog23(面向对象 中)<ul><li><ol start="4"><li>创建对象</li></ol></li><li><ol start="5"><li>原型与原型链</li></ol></li><li><ol start="6"><li>原型应用</li></ol></li></ul></li><li>blog24(面向对象 下)<ul><li><ol start="7"><li>如何编写面向对象程序</li></ol></li><li><ol start="8"><li>面向对象：继承</li></ol></li><li><ol start="9"><li>解决变量名冲突的多种方法</li></ol></li><li><ol start="10"><li>伪数组问题</li></ol></li><li><ol start="11"><li>js的冒泡(Bubbling Event)和捕获(Capture Event)的区别</li></ol></li><li><ol start="12"><li>如何写一个自己的框架</li></ol></li></ul></li><li>blog25 (算法与数据结构)<ul><li><ol><li>查找算法</li></ol></li><li><ol start="2"><li>排序算法</li></ol></li><li><ol start="3"><li>数据结构</li></ol></li></ul></li><li>blog 26 (代码管理与常见命令)<ul><li><ol><li>svn代码版本管理工具</li></ol></li><li><ol start="2"><li>git分布式版本控制系统</li></ol></li><li><ol start="3"><li>git的使用姿势</li></ol></li><li><ol start="4"><li>git与svn的区别</li></ol></li><li><ol start="5"><li>常用命令</li></ol></li><li><ol start="6"><li>常用快捷键</li></ol></li></ul></li><li>blog27 (HTML5)<ul><li>HTML5语法概要</li><li><ol><li>H5新增元素</li></ol></li><li><ol start="2"><li>H5新增属性</li></ol></li><li><ol start="3"><li>H5选择器补充</li></ol></li><li><ol start="4"><li>H5自定义属性 dataset</li></ol></li><li><ol start="5"><li>H5元素类名操作 classList</li></ol></li><li><ol start="6"><li>H5本地存储 localStorage</li></ol></li><li><ol start="7"><li>H5地理位置 geolocation</li></ol></li><li><ol start="8"><li>H5音频 audio</li></ol></li><li><ol start="9"><li>H5视频 video</li></ol></li><li><ol start="10"><li>H5文件 FileReader</li></ol></li><li><ol start="11"><li>H5 web工作线程 webworker</li></ol></li><li><ol start="12"><li>H5 webSocket 网络套接字</li></ol></li><li><ol start="13"><li>H5画布 canvas</li></ol></li><li><ol start="14"><li>H5内联SVG</li></ol></li></ul></li><li>blog28 (杂技)<ul><li><ol><li>toString() &amp;&amp; valueOf()</li></ol></li><li><ol start="2"><li>JSON stringify &amp; parse</li></ol></li><li><ol start="3"><li>+new Date()</li></ol></li><li><ol start="4"><li>Array.prototype.slice.call(arguments, 0) 剖析</li></ol></li><li><ol start="5"><li>JS Bridge建立Native与H5间通信</li></ol></li></ul></li><li>blog29 (css3)<ul><li><ol><li>CSS3老版浏览器兼容处理</li></ol></li><li><ol start="2"><li>CSS3新增选择器</li></ol></li><li><ol start="3"><li>CSS3新增属性</li></ol></li><li><ol start="4"><li>CSS3媒体查询 media</li></ol></li></ul></li></ul><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！</p><p>公众号不发文的时候推送一些我觉得好用的前端网站或者看到的一些问题的解决方案，也更便于大家交流，就酱。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="目录" scheme="https://wangchloe.vip/tags/%E7%9B%AE%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：CSS3(2)</title>
    <link href="https://wangchloe.vip/2017/06/02/blog39/"/>
    <id>https://wangchloe.vip/2017/06/02/blog39/</id>
    <published>2017-06-01T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:43.990Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><ul><li>CSS3老版浏览器兼容处理</li><li>CSS3新增选择器<ul><li>属性选择器</li><li>结构选择器</li></ul></li><li>CSS3新增属性<ul><li>色值透明度 rgba</li><li>文字阴影 text-shadow</li><li>文字省略 text-overflow</li><li>圆角 border-radius</li><li>盒子阴影 box-shadow</li><li>变换 transform (搭配transition使用效果更佳)</li><li>过渡 transition</li><li>动画 animation</li><li>视角 perspectiv</li><li>文字转向 direction</li><li>遮罩 -webkit-mask</li><li>倒影 box-reflect</li><li>文字阴影 text-shadow</li><li>调整尺寸 resize</li><li>background-image内的一些属性</li><li>background相关属性</li><li>滤镜 filter</li></ul></li><li>CSS3媒体查询 media<ul><li>媒体类型</li><li>媒体功能</li><li>meida大全</li></ul></li></ul><a id="more"></a><hr><h2 id="3-CSS3新增属性"><a href="#3-CSS3新增属性" class="headerlink" title="3. CSS3新增属性"></a>3. CSS3新增属性</h2><h3 id="色值透明度-rgba"><a href="#色值透明度-rgba" class="headerlink" title="色值透明度 rgba"></a>色值透明度 rgba</h3><p>之前的opacity改变背景色透明度时同时改变文字颜色透明度</p><p>rgba可实现<strong>只改变背景色透明度</strong></p><h3 id="文字阴影-text-shadow"><a href="#文字阴影-text-shadow" class="headerlink" title="文字阴影 text-shadow"></a>文字阴影 text-shadow</h3><p>text-shadow: [x轴 y轴 模糊度 弥散度 颜色]</p><ul><li><p>x轴：正值 -&gt; 向右 负值 -&gt; 向左</p></li><li><p>y轴：正值 -&gt; 向下 负值 -&gt; 向上</p></li></ul><p>阴影叠加</p><h3 id="文字省略-text-overflow"><a href="#文字省略-text-overflow" class="headerlink" title="文字省略 text-overflow"></a>文字省略 text-overflow</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-class">.ell</span> &#123;</span><br><span class="line">        <span class="attribute">white-space</span>: nowrap;  <span class="comment">/* 不允许换行 */</span></span><br><span class="line">        <span class="attribute">overflow</span>: hidden;     <span class="comment">/* 超出隐藏 */</span></span><br><span class="line">        <span class="attribute">text-overflow</span>: ellipsis;  <span class="comment">/* 超出显示省略号，默认为clip(无省略号) */</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="圆角-border-radius"><a href="#圆角-border-radius" class="headerlink" title="圆角 border-radius"></a>圆角 border-radius</h3><p><code>border-radius: 10px 20px 30px 40px</code> -&gt; 左上角起顺时针经过的角的顺序</p><p><code>border-radius: 10px 20px 30px 40px / 30px 10px 40px 20px</code>  <strong>/</strong> -&gt; 分离x/y轴方向半径</p><h3 id="盒子阴影-box-shadow"><a href="#盒子阴影-box-shadow" class="headerlink" title="盒子阴影 box-shadow"></a>盒子阴影 box-shadow</h3><p><code>box-shadow: [inset]  10px   20px   30px      40px   black;</code></p><pre><code>[内阴影] x位移 y位移 模糊半径  弥散半径 颜色</code></pre><p>多边框实例<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-id">#box</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> black,</span><br><span class="line">                    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> green,</span><br><span class="line">                    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">30px</span> pink,</span><br><span class="line">                    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">40px</span> purple,</span><br><span class="line">                    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">50px</span> orange,</span><br><span class="line">                    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">60px</span> khaki,</span><br><span class="line">                    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">70px</span> indigo,</span><br><span class="line">                    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">80px</span> plum,</span><br><span class="line">                    <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">90px</span> violet;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><h3 id="变换-transform-搭配transition使用效果更佳"><a href="#变换-transform-搭配transition使用效果更佳" class="headerlink" title="变换 transform (搭配transition使用效果更佳)"></a>变换 transform (搭配transition使用效果更佳)</h3><p><strong>以下属性可以一同使用</strong></p><ul><li>rotate([deg])  旋转</li></ul><p><code>transform: rotate(30deg);</code>  正向旋转30度<br><code>tansform: rotate(0.785rad);</code>  正向旋转0.785弧度<br><code>tansform: rotateX|Y|Z(45deg);</code></p><blockquote><p>角度转弧度 π/180×角度<br>弧度变角度 180/π×弧度</p></blockquote><p>transofrm-origin 旋转中心</p><p>eg:<br><code>transofrm-origin: left|top|bottom|right|center(默认);</code><br><code>transofrm-origin: left top|left bottom|right top|left center|center bottom;</code><br><code>transofrm-origin: -120px -120px;</code></p><ul><li>translate(x, y)  偏移<br>x&gt;0 右偏移<br>x<0 左偏移="" y="">0 下偏移<br>y&lt;0 上偏移</0></li></ul><p><code>transform: translate(-30px, -40px);</code> 左偏移30px, 右偏移40px<br><code>transform: translateX|Y|Z(-30px);</code></p><ul><li>scale(s); 放大/缩小</li></ul><p><code>transform: scale(0.2)</code> 宽高缩小至0.2倍的大小<br><code>transform: scale(0.2, 1)</code> 宽度缩小至0.2倍大小，高度不变<br><code>transform: scaleX|scaleY(0.2)</code></p><ul><li>skew([deg]) 倾斜</li></ul><p><code>transform: skew(20deg)</code> 水平向左倾斜20度<br><code>transform: skewX(20deg)</code> 水平向左倾斜20度<br><code>transform: skewY(20deg)</code> 垂直向上倾斜20度<br><code>transform: skew(20deg, 20deg)</code> 水平向左倾斜20度，垂直向上倾斜20度</p><ul><li>关于多属性</li></ul><blockquote><p><strong>transform多属性时从后向前解析</strong></p></blockquote><p>eg:<br><code>transform: rotate(45deg) scale(2,1);</code>  先横向放大再旋转<br><code>transform: scale(2,1) rotate(45deg);</code>  先旋转再横向放大</p><h3 id="过渡-transition"><a href="#过渡-transition" class="headerlink" title="过渡 transition"></a>过渡 transition</h3><p>transition 属性是一个简写属性，用于设置<strong>四个过渡属性</strong>：</p><ul><li><p>transition-property 设置过渡效果的 CSS 属性的名称</p></li><li><p>transition-duration 完成过渡效果需要多少秒</p></li><li><p>transition-timing-function 速度效果的速度曲线</p><ul><li>linear      匀速等于 cubic-bezier(0,0,1,1)</li><li>ease        慢速开始，然后变快，然后慢速结束 cubic-bezier(0.25,0.1,0.25,1)</li><li>ease-in     慢速开始 等于 cubic-bezier(0.42,0,1,1)</li><li>ease-out    慢速结束 等于 cubic-bezier(0,0,0.58,1)</li><li>ease-in-out 慢速开始和结束 等于 cubic-bezier(0.42,0,0.58,1)</li><li>cubic-bezier(n,n,n,n)</li></ul></li><li><p>transition-delay 过渡效果何时开始</p></li></ul><p>eg:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-id">#box</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: green;</span><br><span class="line">        <span class="attribute">transition</span>: <span class="number">1s</span> width <span class="built_in">cubic-bezier</span>(1, 1.7, 0, 1.54) <span class="number">1s</span>;  <span class="comment">/* 1s后由400px过渡到200px */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-id">#box</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">transition</span>: <span class="number">0s</span>; <span class="comment">/* 按下0s后变为400px */</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="动画-animation"><a href="#动画-animation" class="headerlink" title="动画 animation"></a>动画 animation</h3><p>animation 属性是一个简写属性，用于设置<strong>六个动画属性</strong>：</p><ul><li><p>animation-name 需要绑定到选择器的 keyframe 名称</p></li><li><p>animation-duration 完成动画所花费的时间</p></li><li><p>animation-timing-function 动画的速度曲线</p></li><li><p>animation-delay 在动画开始之前的延迟</p></li><li><p>animation-iteration-count 动画应该播放的次数</p><ul><li>n        播放次数</li><li>infinite 无限次播放</li></ul></li><li><p>animation-direction 是否应该轮流反向播放动画</p><ul><li>alternate 轮流反向播放</li><li>reverse   反向播放</li><li>alternate-reverse 反向交替播放</li></ul></li><li><p>animation-fill-mode 结束状态</p><ul><li>forwards  停留在结束状态</li><li>backwards 返回原始状态</li></ul></li><li><p>animation-play-state 暂停动画</p><ul><li>paused   动画已暂停</li><li>running 动画正在播放</li></ul></li></ul><p>keyframe 关键帧<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    @<span class="keyword">keyframes</span> name&#123;</span><br><span class="line">        <span class="selector-tag">from</span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">to</span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        10%&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        20%&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        100%&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><h3 id="视角-perspectiv"><a href="#视角-perspectiv" class="headerlink" title="视角 perspectiv"></a>视角 perspectiv</h3><p>指定观察者与z=0平面的距离，使具有三维位置变换的元素产生透视效果。</p><p><a href="http://www.zhangxinxu.com/wordpress/2015/03/css-only-parallax-effect/" target="_blank" rel="noopener">小tip: 纯CSS实现视差滚动效果</a><br><a href="http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/" target="_blank" rel="noopener">好吧，CSS3 3D transform变换，不过如此！</a></p><p>perspective属性有两种书写形式：</p><ul><li><p>用在舞台元素上（动画元素们的共同父辈元素）</p><ul><li><code>perspective:1px;</code> -&gt; 给当前元素的子集增加视角</li></ul></li><li><p>用在当前动画元素上，与transform的其他属性写在一起</p><ul><li><code>transform:perspective(800px) (perspective必须写在最前面) rotate...</code> -&gt; 给当前元素增加视角</li></ul></li></ul><p>开启3D空间</p><p><code>transform-style:preserve-3d;</code>  加给3D变化元素父集，不可继承</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">/*小tip: 纯CSS实现视差滚动效果*/</span><br><span class="line">.container &#123;</span><br><span class="line">    /* 滚动容器 */</span><br><span class="line">    perspective: 1px; </span><br><span class="line">    padding: 0; height: calc(100vh - 300px); overflow: auto;</span><br><span class="line">&#125;</span><br><span class="line">.box &#123;</span><br><span class="line">    /* 视差元素的父级需要3D视角 */</span><br><span class="line">    height: 1280px;</span><br><span class="line">    transform-style: preserve-3d;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.background &#123;</span><br><span class="line">    /* 滚动比较慢的背景元素 */</span><br><span class="line">    position: absolute; left: 50%;</span><br><span class="line">    transform: translate3D(-50%, -120px, -1px) scale(2);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="文字转向-direction"><a href="#文字转向-direction" class="headerlink" title="文字转向 direction"></a>文字转向 direction</h3><p>需配合<code>unicode-bidi</code>使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    /*right to left*/</span><br><span class="line">    .rtl&#123;</span><br><span class="line">        direction:rtl;</span><br><span class="line">        unicode-bidi:bidi-override;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="遮罩-webkit-mask"><a href="#遮罩-webkit-mask" class="headerlink" title="遮罩 -webkit-mask"></a>遮罩 -webkit-mask</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">.mask&#123;</span><br><span class="line">    -webkit-mask: url(xxx.jpg); /*背景按mask图片大小显示*/</span><br><span class="line">    -webkit-mask:linear-gradient(rgba(0,0,0,1)), to(rgba(0,0,0,0); /*背景按渐变遮罩显示*/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><a href="http://wangchloe.vip/Demo/CSS3/mask">webkit下神奇的图层蒙版效果</a></p><p><img src="http://upload-images.jianshu.io/upload_images/2125655-57bad81f61dd6241.gif?imageMogr2/auto-orient/strip" alt="webkit下神奇的图层蒙版效果.gif"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">    body &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">        background-color: #000;</span><br><span class="line">    &#125;</span><br><span class="line">    #box &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top:0;</span><br><span class="line">        right:0;</span><br><span class="line">        bottom:0;</span><br><span class="line">        left:0;</span><br><span class="line">        background: url(img/2.jpg) no-repeat;</span><br><span class="line">        background-size: cover;</span><br><span class="line">        -webkit-mask: -webkit-radial-gradient(300px 300px, circle, #f00 100px, rgba(0, 0, 0, .3) 20px);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;box&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    var oBox = document.querySelector(&apos;#box&apos;);</span><br><span class="line"></span><br><span class="line">    oBox.onmousemove = function(&#123;</span><br><span class="line">        clientX,</span><br><span class="line">        clientY</span><br><span class="line">    &#125;) &#123;</span><br><span class="line"></span><br><span class="line">        this.style.WebkitMask = `-webkit-radial-gradient($&#123;</span><br><span class="line">            clientX - oBox.offsetLeft</span><br><span class="line">        &#125;px $&#123;</span><br><span class="line">            clientY - oBox.offsetTop</span><br><span class="line">        &#125;px,circle,#f00 100px,rgba(0,0,0,.3) 20px)`</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="倒影-box-reflect"><a href="#倒影-box-reflect" class="headerlink" title="倒影 box-reflect"></a>倒影 box-reflect</h3><p><a href="http://www.zhangxinxu.com/study/201608/-webkit-box-reflect.html" target="_blank" rel="noopener">-webkit-box-reflect各个属性值效果演示</a></p><p>box-reflect：none | <direction> <offset>? <mask-box-image>?</mask-box-image></offset></direction></p><p>方向<direction> = above | below | left | right<br>间隔<offset> = <length> | <percentage><br>遮罩<mask-box-image> = none | <url> | <linear-gradient> | <radial-gradient> | <repeating-linear-gradient> | <repeating-radial-gradient></repeating-radial-gradient></repeating-linear-gradient></radial-gradient></linear-gradient></url></mask-box-image></percentage></length></offset></direction></p><h3 id="文字阴影-text-shadow-1"><a href="#文字阴影-text-shadow-1" class="headerlink" title="文字阴影 text-shadow"></a>文字阴影 text-shadow</h3><p><code>text-shadow: x-shadow y-shadow [blur] [color];</code></p><p>水平阴影位置 垂直阴影位置 模糊的距离 阴影颜色</p><h3 id="调整尺寸-resize"><a href="#调整尺寸-resize" class="headerlink" title="调整尺寸 resize"></a>调整尺寸 resize</h3><p>是否允许用户调整元素的尺寸</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">resize: none;          用户无法调整元素的尺寸</span><br><span class="line">resize: both;          用户可调整元素的高度和宽度</span><br><span class="line">resize: horizontal;    用户可调整元素的宽度</span><br><span class="line">resize: vertical;      用户可调整元素的高度</span><br></pre></td></tr></table></figure><h3 id="background-image内的一些属性"><a href="#background-image内的一些属性" class="headerlink" title="background-image内的一些属性"></a>background-image内的一些属性</h3><h4 id="linear-gradient-线性渐变"><a href="#linear-gradient-线性渐变" class="headerlink" title="linear-gradient 线性渐变"></a>linear-gradient 线性渐变</h4><ul><li>direction:<br>to top    -&gt;    0deg   -&gt; 从下到上<br>to right  -&gt;    90deg  -&gt; 从左到右<br>to bottom -&gt;    180deg -&gt; 从上到下（默认值）<br>to left   -&gt;    270deg -&gt; 从右到左<br>to top left  -&gt; 右上角到左上角（斜对角）<br>to top right -&gt; 左下角到右上角（斜对角）</li></ul><p>eg:<br><code>background-image: linear-gradient(red,blue);</code><br><code>background-image: linear-gradient(250deg,red,blue);</code><br><code>background-image: linear-gradient(red,orange,yellow,green,blue,indigo,violet);</code><br><code>background-image: linear-gradient(red 50%,blue 50%);</code> 跳变<br><code>background-image: linear-gradient(90deg,blue 33.33333%,white 33.33333%,white 66.66666%,red 66.66666%,red 100%);</code> 0~1/3是蓝色 1/3~2/3是白色 2/3~1是红色</p><h4 id="radial-gradient-径向渐变"><a href="#radial-gradient-径向渐变" class="headerlink" title="radial-gradient 径向渐变"></a>radial-gradient 径向渐变</h4><p>background:radial-gradient(position ,shape size, start-color, stop-color);</p><ul><li><p>position 圆心位置</p></li><li><p>shape<br>circle  定义径向渐变为“圆形”<br>ellipse 定义径向渐变为“椭圆形”</p></li><li><p>size<br>closet-side 指定径向渐变的半径长度为从圆心到离圆心最近的边<br>closest-corner  指定径向渐变的半径长度为从圆心到离圆心最近的角<br>farthest-side   指定径向渐变的半径长度为从圆心到离圆心最远的边<br>farthest-corner 指定径向渐变的半径长度为从圆心到离圆心最远的角</p></li></ul><p>eg:<br><code>background-image: radial-gradient(red,blue);</code> 内圆红色，外框蓝色<br><code>background-image: radial-gradient(red,orange,yellow,green,blue,indigo,violet);border-radius: 50%;</code><br><code>background-image: radial-gradient(circle,red 30%,white 30%);</code><br><code>background-image: -webkit-radial-gradient(100px 100px,circle farthest-corner,red,blue);</code><br><code>background-image: -webkit-radial-gradient(100px 100px,circle farthest-side,red,blue);</code><br><code>background-image: -webkit-radial-gradient(150px 100px,200px 80px,red,blue);</code></p><h4 id="repeating-linear-gradient-重复渐变"><a href="#repeating-linear-gradient-重复渐变" class="headerlink" title="repeating-linear-gradient 重复渐变"></a>repeating-linear-gradient 重复渐变</h4><p>eg:<br><code>background-image: repeating-linear-gradient(red,blue 20%);</code></p><h3 id="background相关属性"><a href="#background相关属性" class="headerlink" title="background相关属性"></a>background相关属性</h3><p>####background-origin 相对于内容框来定位背景图像</p><p><code>background-origin: border-box;</code>  相对于边框盒来定位背景图像<br><code>background-origin: content-box;</code> 相对于内容框来定位背景图像<br><code>background-origin: padding-box;</code> 相对于内边距框来定位背景图像</p><h4 id="background-clip-裁剪背景图片"><a href="#background-clip-裁剪背景图片" class="headerlink" title="background-clip 裁剪背景图片"></a>background-clip 裁剪背景图片</h4><p><code>background-clip: border-box;</code>  相对于边框盒来定位背景图像<br><code>background-clip: content-box;</code> 相对于内容框来定位背景图像<br><code>background-clip: padding-box;</code> 相对于内边距框来定位背景图像</p><p><a href="http://wangchloe.vip/Demo/CSS3/mask2">webkit下神奇的文字蒙版效果</a></p><p><img src="http://upload-images.jianshu.io/upload_images/2125655-8fdaedb33502cb11.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="webkit下神奇的文字蒙版效果.PNG"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">    #box &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 200px;</span><br><span class="line">        background: url(img/1.jpg);</span><br><span class="line">        background-size: cover;</span><br><span class="line">        -webkit-background-clip: text;</span><br><span class="line">        font-size: 200px;</span><br><span class="line">        font-weight: bolder;</span><br><span class="line">        color: rgba(0, 0, 0, 0.1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;box&quot;&gt;W&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="background-attachment"><a href="#background-attachment" class="headerlink" title="background-attachment"></a>background-attachment</h4><p><code>background-attachment: scroll</code> 默认值。背景图像会随着页面其余部分的滚动而移动。<br><code>background-attachment: fixed</code>  当页面的其余部分滚动时，背景图像不会移动。</p><p><a href="http://wangchloe.vip/Demo/CSS3/background-attachment">图片覆盖切换效果</a></p><p><img src="http://upload-images.jianshu.io/upload_images/2125655-16406daa0f269fae.gif?imageMogr2/auto-orient/strip" alt="图片覆盖切换.gif"></p><h4 id="background-size-背景图像尺寸"><a href="#background-size-背景图像尺寸" class="headerlink" title="background-size 背景图像尺寸"></a>background-size 背景图像尺寸</h4><p><code>background-size: 3em, 25%;</code>  自定义背景图像尺寸<br><code>background-size: cover;</code>     使背景图像完全覆盖背景区域(<strong>图像可能被裁剪</strong>)<br><code>background-size: contain;</code>   完全包含背景图(<strong>no-repeat背景区域可能有空白</strong>)</p><h4 id="background-position-背景图像定位"><a href="#background-position-背景图像定位" class="headerlink" title="background-position 背景图像定位"></a>background-position 背景图像定位</h4><p>常用于雪碧图</p><p><code>background-position: center|top|right|bottom|left</code><br><code>background-position: 20px 20%</code></p><h3 id="滤镜-filter"><a href="#滤镜-filter" class="headerlink" title="滤镜 filter"></a>滤镜 filter</h3><p><a href="http://www.w3cplus.com/css3/ten-effects-with-css3-filter" target="_blank" rel="noopener">CSS3 Filter的十种特效</a></p><ul><li><p>blur 模糊<br>eg:<br><code>filter: blur(20px);</code></p></li><li><p>drop-shadow 阴影<br><a href="http://www.zhangxinxu.com/wordpress/2016/05/css3-filter-drop-shadow-vs-box-shadow/" target="_blank" rel="noopener">CSS3 filter:drop-shadow滤镜与box-shadow区别应用</a><br>eg:<br><code>filter: drop-shadow(100px 1px 2px black);</code></p></li><li><p>invert 反色<br>eg:<br><code>filter: invert(0.7);</code></p></li><li><p>brightness 亮度<br>eg:<br><code>filter: brightness(.5);</code></p></li><li><p>sepia 褐色<br>eg:<br><code>filter: sepia(1);</code></p></li><li><p>hue-rotate 色相旋转<br>eg:<br><code>filter: hue-rotate(30deg);</code></p></li><li><p>saturate 饱和度<br>eg:<br><code>filter: saturate(10);</code></p></li></ul><h2 id="4-CSS3媒体查询-media"><a href="#4-CSS3媒体查询-media" class="headerlink" title="4. CSS3媒体查询 media"></a>4. CSS3媒体查询 media</h2><h3 id="媒体类型"><a href="#媒体类型" class="headerlink" title="媒体类型"></a>媒体类型</h3><ul><li><p><code>all</code> 用于所有设备</p></li><li><p><code>screen</code> 用于电脑屏幕，平板电脑，智能手机等</p></li><li><p><code>print</code> 用于打印机和打印预览</p></li></ul><h3 id="媒体功能"><a href="#媒体功能" class="headerlink" title="媒体功能"></a>媒体功能</h3><ul><li><p><code>width</code> 定义输出设备中的页面可见区域宽度</p></li><li><p><code>heigth</code> 定义输出设备中的页面可见区域高度</p></li><li><p><code>min-width</code> 定义输出设备中的页面最小可见区域宽度</p></li><li><p><code>max-width</code> 定义输出设备中的页面最大可见区域宽度</p></li><li><p><code>min-height</code> 定义输出设备中的页面最小可见区域高度</p></li><li><p><code>max-height</code> 定义输出设备中的页面最大可见区域高度</p></li><li><p><code>device-width</code> 定义输出设备的屏幕可见宽度</p></li><li><p><code>device-height</code> 定义输出设备的屏幕可见高度</p></li><li><p><code>orientation</code> 定义输出设备中的页面可见区域高度是否大于或等于宽度</p><ul><li><code>portrait</code> 竖屏 页面可见区域高度大于或等于宽度</li><li><code>landscape</code> 横屏 页面可见区域高度小于宽度</li></ul></li></ul><h3 id="meida大全"><a href="#meida大全" class="headerlink" title="meida大全"></a>meida大全</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="comment">/* iphone3 */</span></span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">320px</span>) and (max-device-width:<span class="number">480px</span>)  and (-webkit-device-pixel-ratio:<span class="number">1</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">320px</span>) and (max-device-width:<span class="number">480px</span>)  and (-webkit-device-pixel-ratio:<span class="number">1</span>) and (orientation:portrait) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">320px</span>) and (max-device-width:<span class="number">480px</span>)  and (-webkit-device-pixel-ratio:<span class="number">1</span>) and (orientation:landscape) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*iphone  4 (retina)*/</span></span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">320px</span>) and (max-device-width:<span class="number">480px</span>)  and (-webkit-device-pixel-ratio:<span class="number">2</span>) and (device-aspect-ratio:<span class="number">2</span>/<span class="number">3</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">320px</span>) and (max-device-width:<span class="number">480px</span>)  and (-webkit-device-pixel-ratio:<span class="number">2</span>) and (device-aspect-ratio:<span class="number">2</span>/<span class="number">3</span>) and (orientation:portrait) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">320px</span>) and (max-device-width:<span class="number">480px</span>)  and (-webkit-device-pixel-ratio:<span class="number">2</span>) and (device-aspect-ratio:<span class="number">2</span>/<span class="number">3</span>) and (orientation:landscape) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*iphone 5*/</span></span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">320px</span>) and (max-device-width:<span class="number">568px</span>)  and (-webkit-device-pixel-ratio:<span class="number">2</span>) and (device-aspect-ratio:<span class="number">40</span>/<span class="number">71</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">320px</span>) and (max-device-width:<span class="number">568px</span>)  and (-webkit-device-pixel-ratio:<span class="number">2</span>) and (device-aspect-ratio:<span class="number">40</span>/<span class="number">71</span>) and (orientation:portrait) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">320px</span>) and (max-device-width:<span class="number">568px</span>)  and (-webkit-device-pixel-ratio:<span class="number">2</span>) and (device-aspect-ratio:<span class="number">40</span>/<span class="number">71</span>) and (orientation:landscape) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*ipads (all) */</span></span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">768px</span>) and (max-device-width:<span class="number">1024px</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">768px</span>) and (max-device-width:<span class="number">1024px</span>) and (orientation:portrait) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">media</span> only screen and (min-device-width:<span class="number">768px</span>) and (max-device-width:<span class="number">1024px</span>) and (orientation:landscape) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* ipad-retina */</span></span><br><span class="line">    @<span class="keyword">media</span> screen and (min-device-width:<span class="number">768px</span>) and (max-device-width:<span class="number">1024px</span>)  and (-webkit-device-pixel-ratio:<span class="number">2</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">media</span> screen and (min-device-width:<span class="number">768px</span>) and (max-device-width:<span class="number">1024px</span>)  and (-webkit-device-pixel-ratio:<span class="number">2</span>) and (orientation:portrait) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">media</span> screen and (min-device-width:<span class="number">768px</span>) and (max-device-width:<span class="number">1024px</span>)  and (-webkit-device-pixel-ratio:<span class="number">2</span>) and (orientation:landscape) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* iPhone 6 */</span></span><br><span class="line">    <span class="comment">/* Landscape */</span></span><br><span class="line">    @<span class="keyword">media</span> only screen </span><br><span class="line">    and (min-device-width:<span class="number">375px</span>) /* or <span class="number">213.4375em</span> or <span class="number">3in</span> or <span class="number">9cm</span> */</span><br><span class="line">    and (max-device-width:<span class="number">667px</span>) /* or <span class="number">41.6875em</span> */</span><br><span class="line">    and (width:<span class="number">667px</span>)  /* or <span class="number">41.6875em</span> */</span><br><span class="line">    and (height:<span class="number">375px</span>)  /* or <span class="number">23.4375em</span> */</span><br><span class="line">    and (orientation:landscape) </span><br><span class="line">    and (color:<span class="number">8</span>)</span><br><span class="line">    and (device-aspect-ratio:<span class="number">375</span>/<span class="number">667</span>)</span><br><span class="line">    and (aspect-ratio:<span class="number">667</span>/<span class="number">375</span>)</span><br><span class="line">    and (device-pixel-ratio:<span class="number">2</span>)</span><br><span class="line">    and (-webkit-min-device-pixel-ratio:<span class="number">2</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Portrait */</span></span><br><span class="line">    @<span class="keyword">media</span> only screen </span><br><span class="line">    and (min-device-width:<span class="number">375px</span>)  /* or <span class="number">213.4375em</span> */</span><br><span class="line">    and (max-device-width:<span class="number">667px</span>)  /* or <span class="number">41.6875em</span> */</span><br><span class="line">    and (width:<span class="number">375px</span>)  /* or <span class="number">23.4375em</span> */</span><br><span class="line">    and (height:<span class="number">559px</span>)  /* or <span class="number">34.9375em</span> */</span><br><span class="line">    and (orientation:portrait) </span><br><span class="line">    and (color:<span class="number">8</span>)</span><br><span class="line">    and (device-aspect-ratio:<span class="number">375</span>/<span class="number">667</span>)</span><br><span class="line">    and (aspect-ratio:<span class="number">375</span>/<span class="number">559</span>)</span><br><span class="line">    and (device-pixel-ratio:<span class="number">2</span>)</span><br><span class="line">    and (-webkit-min-device-pixel-ratio:<span class="number">2</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* ----------- iPhone 6+ ----------- */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Portrait and Landscape */</span></span><br><span class="line">    @<span class="keyword">media</span> only screen </span><br><span class="line">      and (min-device-width: <span class="number">414px</span>) </span><br><span class="line">      and (max-device-width: <span class="number">736px</span>) </span><br><span class="line">      and (-webkit-min-device-pixel-ratio: <span class="number">3</span>) &#123; </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Portrait */</span></span><br><span class="line">    @<span class="keyword">media</span> only screen </span><br><span class="line">      and (min-device-width: <span class="number">414px</span>) </span><br><span class="line">      and (max-device-width: <span class="number">736px</span>) </span><br><span class="line">      and (-webkit-min-device-pixel-ratio: <span class="number">3</span>)</span><br><span class="line">      and (orientation: portrait) &#123; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Landscape */</span></span><br><span class="line">    @<span class="keyword">media</span> only screen </span><br><span class="line">      and (min-device-width: <span class="number">414px</span>) </span><br><span class="line">      and (max-device-width: <span class="number">736px</span>) </span><br><span class="line">      and (-webkit-min-device-pixel-ratio: <span class="number">3</span>)</span><br><span class="line">      and (orientation: landscape) &#123; </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><a href="https://segmentfault.com/a/1190000002711737" target="_blank" rel="noopener">常见移动设备的 CSS3 Media Query 整理（iPhone/iPad/Galaxy/HTC One etc.）</a><br><a href="https://css-tricks.com/snippets/css/media-queries-for-standard-devices/" target="_blank" rel="noopener">Media Queries for Standard Devices</a></p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！</p><p>公众号不发文的时候推送一些我觉得好用的前端网站或者看到的一些问题的解决方案，也更便于大家交流，就酱。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;CSS3老版浏览器兼容处理&lt;/li&gt;
&lt;li&gt;CSS3新增选择器&lt;ul&gt;
&lt;li&gt;属性选择器&lt;/li&gt;
&lt;li&gt;结构选择器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS3新增属性&lt;ul&gt;
&lt;li&gt;色值透明度 rgba&lt;/li&gt;
&lt;li&gt;文字阴影 text-shadow&lt;/li&gt;
&lt;li&gt;文字省略 text-overflow&lt;/li&gt;
&lt;li&gt;圆角 border-radius&lt;/li&gt;
&lt;li&gt;盒子阴影 box-shadow&lt;/li&gt;
&lt;li&gt;变换 transform (搭配transition使用效果更佳)&lt;/li&gt;
&lt;li&gt;过渡 transition&lt;/li&gt;
&lt;li&gt;动画 animation&lt;/li&gt;
&lt;li&gt;视角 perspectiv&lt;/li&gt;
&lt;li&gt;文字转向 direction&lt;/li&gt;
&lt;li&gt;遮罩 -webkit-mask&lt;/li&gt;
&lt;li&gt;倒影 box-reflect&lt;/li&gt;
&lt;li&gt;文字阴影 text-shadow&lt;/li&gt;
&lt;li&gt;调整尺寸 resize&lt;/li&gt;
&lt;li&gt;background-image内的一些属性&lt;/li&gt;
&lt;li&gt;background相关属性&lt;/li&gt;
&lt;li&gt;滤镜 filter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS3媒体查询 media&lt;ul&gt;
&lt;li&gt;媒体类型&lt;/li&gt;
&lt;li&gt;媒体功能&lt;/li&gt;
&lt;li&gt;meida大全&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="CSS3" scheme="https://wangchloe.vip/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：CSS3(1)</title>
    <link href="https://wangchloe.vip/2017/06/01/blog38/"/>
    <id>https://wangchloe.vip/2017/06/01/blog38/</id>
    <published>2017-05-31T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:45.239Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><ul><li>CSS3老版浏览器兼容处理</li><li>CSS3新增选择器<ul><li>属性选择器</li><li>结构选择器</li></ul></li><li>CSS3新增属性<ul><li>色值透明度 rgba</li><li>文字阴影 text-shadow</li><li>文字省略 text-overflow</li><li>圆角 border-radius</li><li>盒子阴影 box-shadow</li><li>变换 transform (搭配transition使用效果更佳)</li><li>过渡 transition</li><li>动画 animation</li><li>视角 perspectiv</li><li>文字转向 direction</li><li>遮罩 -webkit-mask</li><li>倒影 box-reflect</li><li>文字阴影 text-shadow</li><li>调整尺寸 resize</li><li>background-image内的一些属性</li><li>background相关属性</li><li>滤镜 filter</li></ul></li><li>CSS3媒体查询 media<ul><li>媒体类型</li><li>媒体功能</li><li>meida大全</li></ul></li></ul><a id="more"></a><hr><h2 id="1-CSS3老版浏览器兼容处理"><a href="#1-CSS3老版浏览器兼容处理" class="headerlink" title="1. CSS3老版浏览器兼容处理"></a>1. CSS3老版浏览器兼容处理</h2><ul><li><p>css</p><ul><li>-webkit-transition: 1s;</li><li>-moz-transition: 1s;</li><li>-o-transition: 1s;</li><li>transition: 1s;</li></ul></li><li><p>js(去掉-，首字母大写)</p><ul><li>WebkitTransition</li><li>MozTransition</li><li>OTransition</li></ul></li></ul><h2 id="2-CSS3新增选择器"><a href="#2-CSS3新增选择器" class="headerlink" title="2. CSS3新增选择器"></a>2. CSS3新增选择器</h2><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><p><strong>兼容：IE7+</strong></p><ul><li><p>E[attr]</p></li><li><p>E[attr=”value”]  匹配属性  <strong>只含一个属性值</strong></p></li><li><p>E[attr~=”value”]  匹配空格隔开的单词  attr属性值包含value</p></li><li><p>E[attr^=”value”]  匹配开头  attr属性值以value开头</p></li><li><p>E[attr$=”value”]  匹配结尾  attr属性值以value结束</p></li><li><p>E[attr*=”value”]   attr属性值包含value字符</p></li><li><p>E[attr|=”value”]  匹配value-开头  attr属性值是value或者”value-“开头  <strong>只含一个属性值</strong></p></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-attr">[attr1]</span> &#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#f00</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-attr">[attr1=a]</span> &#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#0ff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-attr">[attr1~=c]</span> &#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#00f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-attr">[attr1^=e]</span> &#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#ff0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-attr">[attr1$=g]</span> &#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#f0f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-attr">[attr1*=i]</span> &#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#0f0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-attr">[attr1|=k]</span> &#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>E[attr="value"] **只含一个属性值**<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"a"</span>&gt;</span>attr1="a"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"b a"</span>&gt;</span>attr1="b a"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>E[attr~="value"] attr属性值包含value<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"c"</span>&gt;</span>attr1="c"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"d c"</span>&gt;</span>attr1="d c"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>E[attr^="value"] attr属性值以value开头<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"e"</span>&gt;</span>attr1="e"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"f ef"</span>&gt;</span>attr1="f ef"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"ef f"</span>&gt;</span>attr1="ef f"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>E[attr$="value"] attr属性值以value结束<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"g gh"</span>&gt;</span>attr1="g gh"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"h hg"</span>&gt;</span>attr1="h hg"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>E[attr*="value"] attr属性值包含value字符<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"i"</span>&gt;</span>attr1="i"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"j jij"</span>&gt;</span>attr1="j jij"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>E[attr|="value"] attr属性值是value或者"value-"开头  **只含一个属性值**<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"k"</span>&gt;</span>attr1="k"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"l k"</span>&gt;</span>attr1="l k"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"m k-m"</span>&gt;</span>attr1="m k-m"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">attr1</span>=<span class="string">"k-m"</span>&gt;</span>attr1="k-m"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20170110165816536?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdzk1MDkxNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="css3属性选择器"></p><h3 id="结构选择器"><a href="#结构选择器" class="headerlink" title="结构选择器"></a>结构选择器</h3><p><strong>兼容：IE9+</strong></p><p><strong>下标索引从1开始</strong></p><ul><li><p><code>:nth-child(n)</code> 找当前节点的父节点下的第n个子节点，<strong>当且仅当该子节点与当前节点的类型相符时有效</strong></p></li><li><p><code>:nth-last-child(n)</code>  找当前节点的父节点下的倒数第n个子节点，<strong>当且仅当该子节点与当前节点的类型相符时有效</strong></p></li><li><p><code>:nth-of-type(n)</code> 找当前节点的父节点下的第n个与当前节点的类型相符的子节点</p></li><li><p><code>:nth-last-of-type(n)</code> 找当前节点的父节点下的倒数第n个与当前节点的类型相符的子节点</p></li><li><p><code>:first-child</code>  即 :nth-child(1)</p></li><li><p><code>:last-child</code>  即 :nth-last-child(1)</p></li><li><p><code>:first-of-type</code>  即 :nth-of-type(1)</p></li><li><p><code>:last-of-type</code>  即 :nth-last-of-type(1)</p></li><li><p><code>:only-child</code>   当前节点的父节点下只有一个子节点时有效</p></li><li><p><code>:only-of-type</code> 当前节点的父节点下与当前节点的类型相符的子节点只有一个时有效，可有多个其他类型子节点</p></li></ul><hr><ul><li><p><code>:target</code>  设置跳转锚点属性  <a href="#div1"></a> -&gt; <div id="div1"></div></p></li><li><p><code>:disabled</code>  不可点击的表单控件</p></li><li><p><code>:enabled</code>   可点击的表单控件</p></li><li><p><code>:checked</code>   选中的checkbox/radio</p></li><li><p><code>A~B</code>        A元素后的第一个类型为B的兄弟节点  <strong>应用：模拟checkbox</strong></p></li><li><p><code>:first-line</code> 当前节点的第一行</p></li><li><p><code>:first-letter</code> 当前节点的第一个字符</p></li><li><p><code>:not(x)</code>      不匹配x时有效</p></li></ul><hr><p>伪元素</p><ul><li><p><code>::selection</code>  在当前节点内选中文字时有效</p></li><li><p><code>::before</code>     搭配content使用，在当前节点内容最前面插入content <strong>不增加DOM</strong></p></li><li><p><code>::after</code>     搭配content使用，在当前节点内容最后面插入content <strong>不增加DOM</strong></p></li></ul><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！</p><p>公众号是坚持日更的，不发文的时候推送一些我觉得好用的前端网站或者看到的一些问题的解决方案，也更便于大家交流，就酱。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;CSS3老版浏览器兼容处理&lt;/li&gt;
&lt;li&gt;CSS3新增选择器&lt;ul&gt;
&lt;li&gt;属性选择器&lt;/li&gt;
&lt;li&gt;结构选择器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS3新增属性&lt;ul&gt;
&lt;li&gt;色值透明度 rgba&lt;/li&gt;
&lt;li&gt;文字阴影 text-shadow&lt;/li&gt;
&lt;li&gt;文字省略 text-overflow&lt;/li&gt;
&lt;li&gt;圆角 border-radius&lt;/li&gt;
&lt;li&gt;盒子阴影 box-shadow&lt;/li&gt;
&lt;li&gt;变换 transform (搭配transition使用效果更佳)&lt;/li&gt;
&lt;li&gt;过渡 transition&lt;/li&gt;
&lt;li&gt;动画 animation&lt;/li&gt;
&lt;li&gt;视角 perspectiv&lt;/li&gt;
&lt;li&gt;文字转向 direction&lt;/li&gt;
&lt;li&gt;遮罩 -webkit-mask&lt;/li&gt;
&lt;li&gt;倒影 box-reflect&lt;/li&gt;
&lt;li&gt;文字阴影 text-shadow&lt;/li&gt;
&lt;li&gt;调整尺寸 resize&lt;/li&gt;
&lt;li&gt;background-image内的一些属性&lt;/li&gt;
&lt;li&gt;background相关属性&lt;/li&gt;
&lt;li&gt;滤镜 filter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS3媒体查询 media&lt;ul&gt;
&lt;li&gt;媒体类型&lt;/li&gt;
&lt;li&gt;媒体功能&lt;/li&gt;
&lt;li&gt;meida大全&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="CSS3" scheme="https://wangchloe.vip/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：杂技</title>
    <link href="https://wangchloe.vip/2017/05/19/blog37/"/>
    <id>https://wangchloe.vip/2017/05/19/blog37/</id>
    <published>2017-05-18T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:45.901Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><ul><li>toString() &amp;&amp; valueOf()</li><li>JSON stringify &amp; parse</li><li>+new Date()</li><li>Array.prototype.slice.call(arguments, 0) 剖析</li><li>JS Bridge建立Native与H5间通信<ul><li>Hybrid通信原理</li><li>JS Bridge</li></ul></li></ul><a id="more"></a><hr><p>有些平时碰到的很零碎的东西我就随便插入到这个章节里了。</p><h2 id="1-toString-amp-amp-valueOf"><a href="#1-toString-amp-amp-valueOf" class="headerlink" title="1. toString() &amp;&amp; valueOf()"></a>1. toString() &amp;&amp; valueOf()</h2><ul><li><p>toString() 把一个逻辑值转换为字符串，并返回结果。</p></li><li><p>valueOf()  返回Boolean对象的原始值</p></li></ul><blockquote><p><strong>源自知乎</strong><br>这两个方法一般是交由JS去隐式调用，以满足不同的运算情况。</p></blockquote><blockquote><p>在数值运算里，会优先调用valueOf()，如a+b；<br>在字符串运算里，会优先调用toString()，如alert(c)。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 该示例来源于脚本之家</span></span><br><span class="line">    <span class="keyword">var</span> bbb = &#123;</span><br><span class="line">        i: <span class="number">10</span>,</span><br><span class="line">        toString: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'toString'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.i;</span><br><span class="line">        &#125;,</span><br><span class="line">        valueOf: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'valueOf'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    alert(bbb); <span class="comment">// 10 toString</span></span><br><span class="line">    alert(+bbb); <span class="comment">// 10 valueOf</span></span><br><span class="line">    alert(<span class="string">''</span> + bbb); <span class="comment">// 10 valueOf</span></span><br><span class="line">    alert(<span class="built_in">String</span>(bbb)); <span class="comment">// 10 toString</span></span><br><span class="line">    alert(<span class="built_in">Number</span>(bbb)); <span class="comment">// 10 valueOf</span></span><br><span class="line">    alert(bbb == <span class="string">'10'</span>); <span class="comment">// true valueOf</span></span><br><span class="line">    alert(bbb === <span class="string">'10'</span>); <span class="comment">// false</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">console</span>.log(&#123;</span><br><span class="line">        valueOf: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">20</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; * &#123;</span><br><span class="line">        valueOf: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">30</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);     <span class="comment">// 600</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-JSON-stringify-amp-parse"><a href="#2-JSON-stringify-amp-parse" class="headerlink" title="2. JSON stringify &amp; parse"></a>2. JSON stringify &amp; parse</h2><p><a href="https://github.com/douglascrockford/JSON-js/blob/master/json2.js" target="_blank" rel="noopener">json2.js - 引入解决IE7及以下版本JSON未定义问题。</a></p><ol><li>JSON.stringify(object);  <strong>对象 -&gt; 字符串</strong>  将对象字符串序列化成标准JSON字符串</li></ol><p>eg: <code>{a:1,b:2}</code>  -&gt;  <code>&quot;{&quot;a&quot;:1,&quot;b&quot;:2}&quot;</code></p><ol start="2"><li>JSON.parse(str);  <strong>字符串 -&gt; json对象</strong>  将字符串序列化成对象</li></ol><p><code>{&quot;name&quot;:&quot;wangchloe&quot;,&quot;age&quot;:&quot;22&quot;}</code>  -&gt;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    age: &quot;22&quot;,</span><br><span class="line">    name: &quot;wangchloe&quot;,</span><br><span class="line">    _proto: Object</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.baidu.com/"</span> <span class="attr">attr1</span>=<span class="string">'13'</span>&gt;</span>baidu.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> oA = <span class="built_in">document</span>.querySelector(<span class="string">'a'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(oA.getAttribute(<span class="string">'attr1'</span>));  <span class="comment">// 13</span></span><br><span class="line"></span><br><span class="line">    oA.setAttribute(<span class="string">'attr1'</span>, <span class="string">'14'</span>);</span><br><span class="line">    <span class="keyword">var</span> num = oA.getAttribute(<span class="string">'attr1'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(oA.getAttribute(<span class="string">'attr1'</span>));  <span class="comment">// 14</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> number);  <span class="comment">// string 直接设置自定义属性只能得到string类型</span></span><br><span class="line"></span><br><span class="line">    oA.setAttribute(<span class="string">'attr1'</span>, <span class="built_in">JSON</span>.stringify(&#123;<span class="attr">name</span>: <span class="number">14</span>&#125;));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> num2 = oA.getAttribute(<span class="string">'attr1'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(num2);  <span class="comment">// &#123;"name": "14"&#125;</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(num2));</span><br><span class="line">    <span class="comment">// Object &#123;name: "14"&#125;</span></span><br><span class="line">    <span class="comment">//     name: "14"</span></span><br><span class="line">    <span class="comment">//     -&gt; _proto_: Object</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(num2).name);  <span class="comment">// 14</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">JSON</span>.parse(num2).name);  <span class="comment">// number JSON转化得到了真正类型</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-new-Date"><a href="#3-new-Date" class="headerlink" title="3. +new Date()"></a>3. +new Date()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    s = new Date().toString();</span><br><span class="line">    // &quot;Wed May 17 2017 11:00:16 GMT+0800 (中国标准时间)&quot;</span><br><span class="line"></span><br><span class="line">    t = (+new Date()).toString();</span><br><span class="line">    // &quot;1494990039861&quot;</span><br><span class="line">    // +new Date(); 等同于 new Date().getTime(); 简略写法，得到毫秒</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="4-Array-prototype-slice-call-arguments-0-剖析"><a href="#4-Array-prototype-slice-call-arguments-0-剖析" class="headerlink" title="4. Array.prototype.slice.call(arguments, 0) 剖析"></a>4. Array.prototype.slice.call(arguments, 0) 剖析</h2><p>将具有length属性的对象转成数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">// array.js slice的内部实现</span><br><span class="line">function slice(start, end) &#123;</span><br><span class="line">    var len = ToUint32(this.length),</span><br><span class="line">        result = [];</span><br><span class="line">    for (var i = start; i &lt; end; i++) &#123;</span><br><span class="line">        result.push(this[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    // 传入arguments类数组，调用Array.prototype.slice原型方法</span><br><span class="line">    // 并用call()方法，将作用域限定在arguments中</span><br><span class="line">    // 这里Array.prototype就可以理解为arguments</span><br><span class="line">    // 参数0为slice()方法的第一个参数，即开始位置索引，返回整个数组。</span><br><span class="line">    Array.prototype.slice.call(arguments, 0);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="5-JS-Bridge建立Native与H5间通信"><a href="#5-JS-Bridge建立Native与H5间通信" class="headerlink" title="5. JS Bridge建立Native与H5间通信"></a>5. JS Bridge建立Native与H5间通信</h2><h3 id="Hybrid通信原理"><a href="#Hybrid通信原理" class="headerlink" title="Hybrid通信原理"></a>Hybrid通信原理</h3><p>背景：原生APP开发中有一个webview的组件(Android中是webview,iOS7以下有UIWebview,7以上有WKWebview),这个组件可以加载Html文件。</p><ul><li><p>IOS</p><ul><li>Object-C可直接调用js，只需调用stringByEvaluatingJavaScriptFromString即可，可直接获取js返回值。</li><li>js不可直接调用Object-C，利用 shouldStartLoadWithRequest，需拦截每个url，对指定的schema进行拦截做相应的本地方法。</li></ul></li><li><p>Android</p><ul><li>Java可直接调用js，但不可直接获取js返回值。</li><li>Java注册addJavascriptInterface 后，js可直接调用Native的接口，并获取Native的返回值。<a href="http://www.alloyteam.com/2013/02/rang-java-gen-javascript-geng-jia-qin-mi/" target="_blank" rel="noopener">让Java跟Javascript更加亲密</a></li><li>通过 shouldOverrideUrlLoading，也还是拦截Web的所有URL请求来达到通信的目的。</li></ul></li></ul><p><strong>基础通信存在以下问题</strong></p><ul><li><p>Android4.2以下,addJavascriptInterface方式有安全漏洞</p></li><li><p>iOS7以下,js无法调用Native</p></li></ul><h3 id="JS-Bridge"><a href="#JS-Bridge" class="headerlink" title="JS Bridge"></a>JS Bridge</h3><ul><li>url scheme交互方式是一套现有的成熟方案，可以完美兼容各种版本，不存在上述问题。</li></ul><p>通过JSBridge(JS和Native通信机制),H5页面可以调用Native的api,Native也可调用H5页面的方法或者通知H5页面回调。</p><p><img src="https://dailc.github.io/staticResource/blog/hybrid/jsbridge/img_hybrid_base_jsbridgePrinciple_1.png?_=5931322" alt="JSBridge的核心原理"></p><p>原理：<br>（1）初始化创建的一个style.display=none 的iframe,并将iframe.src设置为自有协议，每次js需要与Native通信时，js端主动调用iframe.src即可，Native收到请求通知后，反向调用fetchQueue(可见源码)获取消息内容；若Native需要与js通信，直接调用js，并获取返回值</p><p>（2）</p><ul><li><p>IOS<br>js-&gt;Native：js将要发送的消息存放在js端-&gt;调用iframe.src，触发通知Native-&gt;Native拦截请求，调用js bridge里面的fetchQueue并获取返回的消息内容，处理消息-&gt;将需要返回的数据通过直接调用js的方式，让js处理</p></li><li><p>Android<br>js-&gt;Native: 通过 shouldOverrideUrlLoading 携带Js的返回值<br>（3）Native-&gt;js: Native可直接调用Js并获取返回的内容</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">function bridgeApp(protocol) &#123;</span><br><span class="line">    var iframe = document.createElement(&quot;iframe&quot;);</span><br><span class="line">    var iframeStyle = document.createAttribute(&quot;style&quot;);</span><br><span class="line">    var iframeSrc = document.createAttribute(&quot;src&quot;);</span><br><span class="line"></span><br><span class="line">    iframeStyle.nodeValue = &quot;display:none;width:0;height:0;&quot;;</span><br><span class="line">    iframeSrc.nodeValue = protocol;</span><br><span class="line">    iframe.setAttributeNode(iframeStyle);</span><br><span class="line">    iframe.setAttributeNode(iframeSrc);</span><br><span class="line">    document.body.appendChild(iframe);</span><br><span class="line"></span><br><span class="line">    setTimeout(function() &#123;</span><br><span class="line">        document.body.removeChild(iframe);</span><br><span class="line">    &#125;, 250);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><a href="http://www.cnblogs.com/dailc/p/5930231.html" target="_blank" rel="noopener">连续五篇讲述Hybrid以及JSBridge解决方案</a></p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！</p><p>公众号是坚持日更的，不发文的时候推送一些我觉得好用的前端网站或者看到的一些问题的解决方案，也更便于大家交流，就酱。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;toString() &amp;amp;&amp;amp; valueOf()&lt;/li&gt;
&lt;li&gt;JSON stringify &amp;amp; parse&lt;/li&gt;
&lt;li&gt;+new Date()&lt;/li&gt;
&lt;li&gt;Array.prototype.slice.call(arguments, 0) 剖析&lt;/li&gt;
&lt;li&gt;JS Bridge建立Native与H5间通信&lt;ul&gt;
&lt;li&gt;Hybrid通信原理&lt;/li&gt;
&lt;li&gt;JS Bridge&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="杂技" scheme="https://wangchloe.vip/tags/%E6%9D%82%E6%8A%80/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：HTML5(内联SVG)</title>
    <link href="https://wangchloe.vip/2017/04/24/blog36/"/>
    <id>https://wangchloe.vip/2017/04/24/blog36/</id>
    <published>2017-04-23T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:46.902Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><ul><li>H5内联SVG<ul><li>(1) 位图 &amp;&amp; 矢量图</li><li>(2) SVG使用</li><li>(3) SVG梗概</li><li>(4) SVG应用</li></ul></li></ul><a id="more"></a><hr><h2 id="14-H5内联SVG"><a href="#14-H5内联SVG" class="headerlink" title="14. H5内联SVG"></a>14. H5内联SVG</h2><p>SVG(Scalable Vector Graphic 可伸缩矢量图形)<br>VML(The Vector Markup Language  矢量可标记语言)</p><blockquote><p>SVG 使用 XML 格式定义图形</p></blockquote><h3 id="1-位图-amp-amp-矢量图"><a href="#1-位图-amp-amp-矢量图" class="headerlink" title="(1) 位图 &amp;&amp; 矢量图"></a>(1) 位图 &amp;&amp; 矢量图</h3><ul><li><p>位图 -&gt; 由像素点构成的图形</p><ul><li>优点: 色彩信息相当复杂</li><li>缺点: 失真、体积大</li></ul></li><li><p>矢量图 -&gt; 由数学语言描述出的图形</p><ul><li>优点: 体积小不失真</li><li>缺点: 色彩信息单一，图形简单</li></ul></li></ul><h3 id="2-SVG使用"><a href="#2-SVG使用" class="headerlink" title="(2) SVG使用"></a>(2) SVG使用</h3><p>1.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;xxx.svg&quot;&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;svg width=&quot;801px&quot; height=&quot;792px&quot; viewBox=&quot;0 0 801 792&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure><p>2.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&gt;</span><br><span class="line">&lt;rect x=&quot;20&quot; y=&quot;20&quot; rx=&quot;20&quot; ry=&quot;20&quot; width=&quot;250&quot; height=&quot;250&quot; style=&quot;fill:blue;stroke:pink;stroke-width:5;fill-opacity:0.1;stroke-opacity:0.9&quot;/&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure></p><p>3.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/svg&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var oSvg = document.querySelector(&apos;svg&apos;);</span><br><span class="line">var oLine = document.createElementNS(&apos;http://www.w3.org/2000/svg&apos;, &apos;line&apos;);</span><br><span class="line"></span><br><span class="line">oLine.setAttribute(&apos;x1&apos;, &apos;10&apos;);</span><br><span class="line">oLine.setAttribute(&apos;y1&apos;, &apos;10&apos;);</span><br><span class="line">oLine.setAttribute(&apos;x2&apos;, &apos;100&apos;);</span><br><span class="line">oLine.setAttribute(&apos;y2&apos;, &apos;100&apos;);</span><br><span class="line">oLine.setAttribute(&apos;stroke&apos;, &apos;green&apos;);</span><br><span class="line"></span><br><span class="line">oSvg.appendChild(oLine);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h3 id="3-SVG梗概"><a href="#3-SVG梗概" class="headerlink" title="(3) SVG梗概"></a>(3) SVG梗概</h3><ul><li><p><code>&lt;rect&gt;</code>     矩形<br>eg: <code>&lt;rect x=&quot;20&quot; y=&quot;20&quot; rx=&quot;20&quot; ry=&quot;20&quot; width=&quot;250&quot; height=&quot;250&quot; style=&quot;fill:blue;stroke:pink;stroke-width:5;fill-opacity:0.1;stroke-opacity:0.9&quot;/&gt;</code></p><ul><li>x, y  位置</li><li>width, height  宽高</li><li>rx, ry  圆角矩形</li><li>style  css属性</li></ul></li><li><p><code>&lt;circle&gt;</code>   圆形<br>eg: <code>&lt;circle cx=&quot;100&quot; cy=&quot;50&quot; r=&quot;40&quot; stroke=&quot;black&quot; stroke-width=&quot;2&quot; fill=&quot;red&quot;/&gt;</code></p><ul><li>cx, cy  圆心坐标 默认(0, 0)</li><li>r  半径</li></ul></li><li><p><code>&lt;ellipse&gt;</code>  椭圆<br>eg: <code>&lt;ellipse cx=&quot;300&quot; cy=&quot;150&quot; rx=&quot;200&quot; ry=&quot;80&quot;style=&quot;fill:rgb(200,100,50);stroke:rgb(0,0,100);stroke-width:2&quot;/&gt;</code></p><ul><li>cx, cy  圆心坐标</li><li>rx, ry  水平/垂直半径</li></ul></li><li><p><code>&lt;line&gt;</code>     线<br>eg: <code>&lt;line x1=&quot;0&quot; y1=&quot;0&quot; x2=&quot;300&quot; y2=&quot;300&quot;style=&quot;stroke:rgb(99,99,99);stroke-width:2&quot;/&gt;</code></p><ul><li>x1, y1  开始坐标</li><li>x2, y2  结束坐标</li></ul></li><li><p><code>&lt;polyline&gt;</code> 折线<br>eg: <code>&lt;polyline points=&quot;0,0 0,20 20,20 20,40 40,40 40,60&quot;style=&quot;fill:white;stroke:red;stroke-width:2&quot;/&gt;</code></p><ul><li>points 每个折点的x,y坐标</li></ul></li><li><p><code>&lt;polygon&gt;</code>  多边形<br>eg: <code>&lt;polygon points=&quot;220,100 300,210 170,250&quot;style=&quot;fill:#cccccc;stroke:#000000;stroke-width:1&quot;/&gt;</code></p><ul><li>points  每个角的x,y坐标(自动闭合)</li></ul></li><li><p><code>&lt;path&gt;</code>     路径<br>eg: <code>&lt;path d=&quot;M250 150 L150 350 L350 350 Z&quot; style=&quot;#ccc;&quot;/&gt;</code>  <strong>大写表示绝对定位，小写表示相对定位。</strong></p><ul><li>M  moveto</li><li>L  lineto</li><li>H  horizontal lineto</li><li>V  vertical lineto</li><li>C  curveto</li><li>S  smooth curveto</li><li>Q  quadratic Belzier curve</li><li>T  smooth quadratic Belzier curveto</li><li>A  elliptical Arc</li><li>Z  closepath</li></ul></li></ul><ul><li><p><code>&lt;filter&gt;</code>    高斯滤镜  <strong><filter> 标签必须嵌套在 <defs> 标签内。</defs></filter></strong>  definitions 定义<br>eg: <code>&lt;defs&gt;&lt;filter id=&quot;Gaussian_Blur&quot;&gt;&lt;feGaussianBlur in=&quot;SourceGraphic&quot; stdDeviation=&quot;3&quot; /&gt;&lt;/filter&gt;&lt;/defs&gt;</code><br><code>&lt;ellipse cx=&quot;200&quot; cy=&quot;150&quot; rx=&quot;70&quot; ry=&quot;40&quot; style=&quot;fill:#ff0000;stroke:#000000;stroke-width:2;filter:url(#Gaussian_Blur)&quot;/&gt;</code></p><ul><li><p><filter>id  定义名称</filter></p></li><li><p>filter:url(#xxx)  链接滤镜</p></li></ul></li><li><p><code>&lt;linearGradient&gt;</code>  线性渐变  <strong><lineargradient> 标签必须嵌套在 <defs> 的内部。</defs></lineargradient></strong><br>eg: <code>&lt;defs&gt;&lt;linearGradient id=&quot;orange_red&quot; x1=&quot;0%&quot; y1=&quot;0%&quot; x2=&quot;100%&quot; y2=&quot;0%&quot;&gt;&lt;stop offset=&quot;0%&quot; style=&quot;stop-color:rgb(255,255,0);stop-opacity:1&quot;/&gt;&lt;stop offset=&quot;100%&quot; style=&quot;stop-color:rgb(255,0,0);stop-opacity:1&quot;/&gt;&lt;/linearGradient&gt;&lt;/defs&gt;</code><br><code>&lt;ellipse cx=&quot;200&quot; cy=&quot;190&quot; rx=&quot;85&quot; ry=&quot;55&quot; style=&quot;fill:url(#orange_red)&quot;/&gt;</code></p><ul><li><lineargradient>id  定义名称</lineargradient></li><li><lineargradient>x1,y1  渐变开始位置</lineargradient></li><li><lineargradient>x2,y2  渐变结束位置</lineargradient></li><li><p><stop></stop>  渐变颜色</p></li><li><p>fill:url(#xxx)  链接渐变</p></li></ul></li><li><p><code>&lt;radialGradient&gt;</code>  径向渐变  <strong><radialgradient> 标签必须嵌套在 <defs> 中。</defs></radialgradient></strong><br>eg: <code>&lt;defs&gt;&lt;radialGradient id=&quot;grey_blue&quot; cx=&quot;50%&quot; cy=&quot;50%&quot; r=&quot;50%&quot;fx=&quot;50%&quot; fy=&quot;50%&quot;&gt;&lt;stop offset=&quot;0%&quot; style=&quot;stop-color:rgb(200,200,200);stop-opacity:0&quot;/&gt;&lt;stop offset=&quot;100%&quot; style=&quot;stop-color:rgb(0,0,255);stop-opacity:1&quot;/&gt;&lt;/radialGradient&gt;&lt;/defs&gt;</code><br><code>&lt;ellipse cx=&quot;230&quot; cy=&quot;200&quot; rx=&quot;110&quot; ry=&quot;100&quot; style=&quot;fill:url(#grey_blue)&quot;/&gt;</code></p><ul><li><radialgradient>id  定义名称</radialgradient></li><li><radialgradient>cx,cy,r  外圈</radialgradient></li><li><radialgradient>fx,fy  内圈</radialgradient></li><li><p><stop></stop>  渐变颜色</p></li><li><p>fill:url(#xxx)  链接渐变</p></li></ul></li></ul><h3 id="4-SVG应用"><a href="#4-SVG应用" class="headerlink" title="(4) SVG应用"></a>(4) SVG应用</h3><p><a href="http://www.zhangxinxu.com/wordpress/2014/04/animateion-line-drawing-svg-path-%E5%8A%A8%E7%94%BB-%E8%B7%AF%E5%BE%84/" target="_blank" rel="noopener">纯CSS实现帅气的SVG路径描边动画效果</a></p><ul><li><code>stroke-dasharray</code>  各虚线长度</li><li><code>stroke-dashoffset</code>  虚线的起始偏移</li></ul><p>获取路径长度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">var path = document.querySelector(&apos;path&apos;);</span><br><span class="line">var length = path.getTotalLength();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h4 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.one</span> &#123;</span><br><span class="line"><span class="attribute">stroke-dasharray</span>: <span class="number">600</span>;</span><br><span class="line"><span class="attribute">stroke-dashoffset</span>: <span class="number">600</span>;</span><br><span class="line"><span class="attribute">animation</span>: ani <span class="number">2s</span> forwards;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.two</span> &#123;</span><br><span class="line"><span class="attribute">stroke-dasharray</span>: <span class="number">600</span>;</span><br><span class="line"><span class="attribute">stroke-dashoffset</span>: <span class="number">600</span>;</span><br><span class="line"><span class="attribute">animation</span>: ani <span class="number">1.8s</span> forwards <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.three</span> &#123;</span><br><span class="line"><span class="attribute">stroke-dasharray</span>: <span class="number">600</span>;</span><br><span class="line"><span class="attribute">stroke-dashoffset</span>: <span class="number">600</span>;</span><br><span class="line"><span class="attribute">animation</span>: ani <span class="number">1.6s</span> forwards <span class="number">0.4s</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">keyframes</span> ani &#123;</span><br><span class="line"><span class="selector-tag">to</span> &#123;</span><br><span class="line"><span class="attribute">stroke-dashoffset</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>三个颜色变换</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">"800"</span> <span class="attr">height</span>=<span class="string">"600"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- one --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M149.593084,114.512754 C149.593084,80.6086232 265.458217,31.6263568 265.458217,144.647923 C265.458217,257.669489 149.593084,288.726563 149.593084,288.726563 L291.550902,288.726563"</span> <span class="attr">class</span>=<span class="string">"one"</span> <span class="attr">stroke</span>=<span class="string">"#4A4A4A"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M391.00506,81.6608912 C297.400634,81.6608912 275.086722,284.767558 384.426619,284.767558 C493.766517,284.767558 484.609487,81.6608912 391.00506,81.6608912 Z"</span> <span class="attr">class</span>=<span class="string">"one"</span>  <span class="attr">stroke</span>=<span class="string">"#4A4A4A"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M508.720275,85.6448695 C519.572766,106.125165 510.370277,296.381449 510.370277,296.381449"</span> <span class="attr">class</span>=<span class="string">"one"</span>  <span class="attr">stroke</span>=<span class="string">"#4A4A4A"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M570.187369,93.0436865 C570.187369,93.0436865 703.312123,69.0165013 703.312123,103.354018 C703.312123,137.691534 595.118196,304.797696 595.118196,304.797696"</span> <span class="attr">class</span>=<span class="string">"one"</span>  <span class="attr">stroke</span>=<span class="string">"#4A4A4A"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- two --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M149.593084,114.512754 C149.593084,80.6086232 265.458217,31.6263568 265.458217,144.647923 C265.458217,257.669489 149.593084,288.726563 149.593084,288.726563 L291.550902,288.726563"</span> <span class="attr">class</span>=<span class="string">"two"</span> <span class="attr">stroke</span>=<span class="string">"#029df9"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M391.00506,81.6608912 C297.400634,81.6608912 275.086722,284.767558 384.426619,284.767558 C493.766517,284.767558 484.609487,81.6608912 391.00506,81.6608912 Z"</span> <span class="attr">class</span>=<span class="string">"two"</span> <span class="attr">stroke</span>=<span class="string">"#029df9"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M508.720275,85.6448695 C519.572766,106.125165 510.370277,296.381449 510.370277,296.381449"</span> <span class="attr">class</span>=<span class="string">"two"</span> <span class="attr">stroke</span>=<span class="string">"#029df9"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M570.187369,93.0436865 C570.187369,93.0436865 703.312123,69.0165013 703.312123,103.354018 C703.312123,137.691534 595.118196,304.797696 595.118196,304.797696"</span> <span class="attr">class</span>=<span class="string">"two"</span> <span class="attr">stroke</span>=<span class="string">"#029df9"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- three --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M149.593084,114.512754 C149.593084,80.6086232 265.458217,31.6263568 265.458217,144.647923 C265.458217,257.669489 149.593084,288.726563 149.593084,288.726563 L291.550902,288.726563"</span> <span class="attr">class</span>=<span class="string">"three"</span> <span class="attr">stroke</span>=<span class="string">"#90da32"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M391.00506,81.6608912 C297.400634,81.6608912 275.086722,284.767558 384.426619,284.767558 C493.766517,284.767558 484.609487,81.6608912 391.00506,81.6608912 Z"</span> <span class="attr">class</span>=<span class="string">"three"</span> <span class="attr">stroke</span>=<span class="string">"#90da32"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M508.720275,85.6448695 C519.572766,106.125165 510.370277,296.381449 510.370277,296.381449"</span> <span class="attr">class</span>=<span class="string">"three"</span> <span class="attr">stroke</span>=<span class="string">"#90da32"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M570.187369,93.0436865 C570.187369,93.0436865 703.312123,69.0165013 703.312123,103.354018 C703.312123,137.691534 595.118196,304.797696 595.118196,304.797696"</span> <span class="attr">class</span>=<span class="string">"three"</span> <span class="attr">stroke</span>=<span class="string">"#90da32"</span> <span class="attr">stroke-width</span>=<span class="string">"8"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke-lineCap</span>=<span class="string">"round"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-矢量图形库-Raphael-js"><a href="#5-矢量图形库-Raphael-js" class="headerlink" title="(5) 矢量图形库 Raphael.js"></a>(5) 矢量图形库 Raphael.js</h3><p><a href="http://dmitrybaranovskiy.github.io/raphael/reference.html" target="_blank" rel="noopener">Raphaël Reference</a></p><p>示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;libs/raphael.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// Creates canvas 320 × 200 at 10, 50</span><br><span class="line">var paper = Raphael(10, 50, 320, 200);</span><br><span class="line"></span><br><span class="line">// Creates circle at x = 50, y = 40, with radius 10</span><br><span class="line">var circle = paper.circle(50, 40, 10);</span><br><span class="line">// Sets the fill attribute of the circle to red (#f00)</span><br><span class="line">circle.attr(&quot;fill&quot;, &quot;#f00&quot;);</span><br><span class="line"></span><br><span class="line">// Sets the stroke attribute of the circle to white</span><br><span class="line">circle.attr(&quot;stroke&quot;, &quot;#fff&quot;);</span><br><span class="line"></span><br><span class="line">circle.click(function() &#123;</span><br><span class="line">this.animate(&#123;</span><br><span class="line">fill: &apos;#fe0&apos;,</span><br><span class="line">y: 100</span><br><span class="line">&#125;, 500, &apos;bounce&apos;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// circle.drag(function(dx,dy)&#123;</span><br><span class="line">// this.attr(&#123;</span><br><span class="line">// x: x + dx,</span><br><span class="line">// y: y + dy</span><br><span class="line">// &#125;)</span><br><span class="line">// &#125;,function()&#123;</span><br><span class="line">// x = this.attr(&apos;x&apos;)</span><br><span class="line">// y = this.attr(&apos;y&apos;)</span><br><span class="line">// &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！</p><p>公众号是坚持日更的，不发文的时候推送一些我觉得好用的前端网站或者看到的一些问题的解决方案，也更便于大家交流，就酱。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;H5内联SVG&lt;ul&gt;
&lt;li&gt;(1) 位图 &amp;amp;&amp;amp; 矢量图&lt;/li&gt;
&lt;li&gt;(2) SVG使用&lt;/li&gt;
&lt;li&gt;(3) SVG梗概&lt;/li&gt;
&lt;li&gt;(4) SVG应用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="HTML5" scheme="https://wangchloe.vip/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：HTML5(canvas应用)</title>
    <link href="https://wangchloe.vip/2017/04/23/blog35/"/>
    <id>https://wangchloe.vip/2017/04/23/blog35/</id>
    <published>2017-04-22T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:48.070Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><ul><li>(1) 应用 canvas笑脸</li><li>(2) 应用 canvas画图</li><li>(3) 应用 canvas变换</li><li>(4) 应用 canvas内长方形拖拽</li><li>(5) 应用 canvas内圆形拖拽</li><li>(6) 应用 下载canvas绘图</li><li>(7) 应用 canvas运动回调</li><li>(8) canvas框架 jCanvaScript.js</li></ul><a id="more"></a><hr><h3 id="1-应用-canvas笑脸"><a href="#1-应用-canvas笑脸" class="headerlink" title="(1) 应用 canvas笑脸"></a>(1) 应用 canvas笑脸</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas width=&quot;800&quot; height=&quot;1200&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var oC = document.querySelector(&apos;canvas&apos;);</span><br><span class="line">var ctx = oC.getContext(&apos;2d&apos;);</span><br><span class="line"></span><br><span class="line">// face</span><br><span class="line">ctx.fillStyle = &apos;yellow&apos;;</span><br><span class="line">ctx.arc(400, 250, 180, 0, 2 * Math.PI, false);</span><br><span class="line">ctx.fill();</span><br><span class="line">ctx.stroke();</span><br><span class="line"></span><br><span class="line">// mouth</span><br><span class="line">ctx.beginPath();</span><br><span class="line">ctx.lineCap = &apos;round&apos;;</span><br><span class="line"></span><br><span class="line">ctx.lineWidth = 20;</span><br><span class="line">ctx.fillStyle = &apos;red&apos;;</span><br><span class="line">ctx.arc(400, 280, 80, 0, Math.PI, false);</span><br><span class="line">// ctx.fill();  // 红色实心半圆张嘴笑脸</span><br><span class="line">ctx.stroke();  // 黑色半圆弧微笑脸</span><br><span class="line"></span><br><span class="line">// eyes</span><br><span class="line">ctx.beginPath();</span><br><span class="line">ctx.fillStyle = &apos;black&apos;;</span><br><span class="line">ctx.moveTo(350, 200);</span><br><span class="line">ctx.arc(350, 200, 20, 0, 2 * Math.PI, false);</span><br><span class="line"></span><br><span class="line">ctx.moveTo(450, 200);</span><br><span class="line">ctx.arc(450, 200, 20, 0, 2 * Math.PI, false);</span><br><span class="line"></span><br><span class="line">ctx.closePath();</span><br><span class="line"></span><br><span class="line">ctx.fill();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="2-应用-canvas画图"><a href="#2-应用-canvas画图" class="headerlink" title="(2) 应用 canvas画图"></a>(2) 应用 canvas画图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas width=&quot;800&quot; height=&quot;600&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var oC = document.querySelector(&apos;canvas&apos;);</span><br><span class="line">var ctx = oC.getContext(&apos;2d&apos;);</span><br><span class="line"></span><br><span class="line">oC.onmousedown = function(ev) &#123;</span><br><span class="line"></span><br><span class="line">var &#123;</span><br><span class="line">clientX,</span><br><span class="line">clientY</span><br><span class="line">&#125; = ev;</span><br><span class="line"></span><br><span class="line">ctx.moveTo(clientX, clientY)</span><br><span class="line"></span><br><span class="line">oC.onmousemove = function(ev) &#123;</span><br><span class="line"></span><br><span class="line">ctx.clearRect(0, 0, oC.width, oC.height);</span><br><span class="line"></span><br><span class="line">var &#123;</span><br><span class="line">clientX,</span><br><span class="line">clientY</span><br><span class="line">&#125; = ev;</span><br><span class="line"></span><br><span class="line">ctx.lineWidth = 5;</span><br><span class="line">ctx.lineTo(clientX, clientY);</span><br><span class="line">ctx.stroke();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">oC.onmouseup = function() &#123;</span><br><span class="line">oC.onmousemove = null;</span><br><span class="line">oC.onmouseup = null;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="3-应用-canvas变换"><a href="#3-应用-canvas变换" class="headerlink" title="(3) 应用 canvas变换"></a>(3) 应用 canvas变换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas width=&quot;800&quot; height=&quot;600&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var oC = document.querySelector(&apos;canvas&apos;);</span><br><span class="line">var ctx = oC.getContext(&apos;2d&apos;);</span><br><span class="line"></span><br><span class="line">var degree = 1;</span><br><span class="line"></span><br><span class="line">var x1 = 300;</span><br><span class="line">var y1 = 300;</span><br><span class="line">var w1 = 100;</span><br><span class="line">var h1 = 100;</span><br><span class="line"></span><br><span class="line">var x2 = 100;</span><br><span class="line">var y2 = 100;</span><br><span class="line">var w2 = 50;</span><br><span class="line">var h2 = 50;</span><br><span class="line"></span><br><span class="line">var rotate1 = 0;</span><br><span class="line">var rotate2 = 0;</span><br><span class="line"></span><br><span class="line">setInterval(function() &#123;</span><br><span class="line">ctx.clearRect(-oC.width, -oC.height, oC.width * 2, 2 * oC.height);</span><br><span class="line"></span><br><span class="line">ctx.save();</span><br><span class="line">ctx.translate(x1, y1);</span><br><span class="line">ctx.rotate(rotate1);</span><br><span class="line">ctx.fillRect(-w1 / 2, -h1 / 2, w1, h1);</span><br><span class="line">ctx.restore();</span><br><span class="line"></span><br><span class="line">ctx.save();</span><br><span class="line">ctx.translate(x2, y2);</span><br><span class="line">ctx.rotate(rotate2);</span><br><span class="line">ctx.fillRect(-w2 / 2, -h2 / 2, w2, h2);</span><br><span class="line">ctx.restore()</span><br><span class="line"></span><br><span class="line">rotate1++;</span><br><span class="line">rotate2 += 0.2;</span><br><span class="line">&#125;, 100)</span><br><span class="line"></span><br><span class="line">function d2a(deg) &#123;</span><br><span class="line">return deg / 180 * Math.PI</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="4-应用-canvas内长方形拖拽"><a href="#4-应用-canvas内长方形拖拽" class="headerlink" title="(4) 应用 canvas内长方形拖拽"></a>(4) 应用 canvas内长方形拖拽</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas width=&quot;800&quot; height=&quot;600&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var oC = document.querySelector(&apos;canvas&apos;);</span><br><span class="line">var ctx = oC.getContext(&apos;2d&apos;);</span><br><span class="line"></span><br><span class="line">var rect = &#123;</span><br><span class="line">x: 0,</span><br><span class="line">y: 0,</span><br><span class="line">w: 100,</span><br><span class="line">h: 100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ctx.fillRect(</span><br><span class="line">rect.x,</span><br><span class="line">rect.y,</span><br><span class="line">rect.w,</span><br><span class="line">rect.h</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">oC.onmousedown = function(&#123;</span><br><span class="line">clientX,</span><br><span class="line">clientY</span><br><span class="line">&#125;) &#123;</span><br><span class="line">var &#123;</span><br><span class="line">x,</span><br><span class="line">y,</span><br><span class="line">w,</span><br><span class="line">h</span><br><span class="line">&#125; = rect;</span><br><span class="line"></span><br><span class="line">var disX = clientX - x;</span><br><span class="line">var disY = clientY - y;</span><br><span class="line"></span><br><span class="line">if (</span><br><span class="line">clientX &gt; x &amp;&amp;</span><br><span class="line">clientX &lt; x + w &amp;&amp;</span><br><span class="line">clientY &gt; y &amp;&amp;</span><br><span class="line">clientY &lt; y + h</span><br><span class="line">) &#123;</span><br><span class="line">oC.onmousemove = function(&#123;</span><br><span class="line">clientX,</span><br><span class="line">clientY</span><br><span class="line">&#125;) &#123;</span><br><span class="line"></span><br><span class="line">ctx.clearRect(0, 0, oC.width, oC.height)  // **先清空画布再画</span><br><span class="line"></span><br><span class="line">var deltaX = clientX - disX;</span><br><span class="line">var deltaY = clientY - disY;</span><br><span class="line"></span><br><span class="line">rect.x = deltaX;</span><br><span class="line">rect.y = deltaY;</span><br><span class="line"></span><br><span class="line">ctx.fillRect(</span><br><span class="line">rect.x,</span><br><span class="line">rect.y,</span><br><span class="line">rect.w,</span><br><span class="line">rect.h</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">oC.onmouseup = function() &#123;</span><br><span class="line">oC.onmousemove = null;</span><br><span class="line">oC.onmouseup = null;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="5-应用-canvas内圆形拖拽"><a href="#5-应用-canvas内圆形拖拽" class="headerlink" title="(5) 应用 canvas内圆形拖拽"></a>(5) 应用 canvas内圆形拖拽</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas width=&quot;800&quot; height=&quot;600&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var oC = document.querySelector(&apos;canvas&apos;);</span><br><span class="line">var ctx = oC.getContext(&apos;2d&apos;);</span><br><span class="line"></span><br><span class="line">var circle = &#123;</span><br><span class="line">x: 50,</span><br><span class="line">y: 50,</span><br><span class="line">r: 50</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ctx.arc(circle.x, circle.y, circle.r, 0, 2 * Math.PI, false);</span><br><span class="line"></span><br><span class="line">ctx.fill();</span><br><span class="line"></span><br><span class="line">oC.onmousedown = function(&#123;</span><br><span class="line">clientX,</span><br><span class="line">clientY</span><br><span class="line">&#125;) &#123;</span><br><span class="line">var &#123;</span><br><span class="line">x,</span><br><span class="line">y,</span><br><span class="line">r</span><br><span class="line">&#125; = circle;</span><br><span class="line"></span><br><span class="line">var disX = clientX - x;</span><br><span class="line">var disY = clientY - y;</span><br><span class="line"></span><br><span class="line">if (</span><br><span class="line">ctx.isPointInPath(clientX, clientY)  // 利用isPointInPath函数</span><br><span class="line">) &#123;</span><br><span class="line">oC.onmousemove = function(&#123;</span><br><span class="line">clientX,</span><br><span class="line">clientY</span><br><span class="line">&#125;) &#123;</span><br><span class="line">ctx.clearRect(0, 0, oC.width, oC.height);</span><br><span class="line">ctx.beginPath();</span><br><span class="line"></span><br><span class="line">var deltaX = clientX - disX;</span><br><span class="line">var deltaY = clientY - disY;</span><br><span class="line"></span><br><span class="line">circle.x = deltaX;</span><br><span class="line">circle.y = deltaY;</span><br><span class="line"></span><br><span class="line">ctx.arc(circle.x, circle.y, circle.r, 0, 2 * Math.PI, false);</span><br><span class="line">ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">oC.onmouseup = function() &#123;</span><br><span class="line">oC.onmousemove = null;</span><br><span class="line">oC.onmouseup = null;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="6-应用-下载canvas绘图"><a href="#6-应用-下载canvas绘图" class="headerlink" title="(6) 应用 下载canvas绘图"></a>(6) 应用 下载canvas绘图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas width=&quot;600&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;button&gt;Download&lt;/button&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var oC = document.querySelector(&apos;canvas&apos;);</span><br><span class="line">var ctx = oC.getContext(&apos;2d&apos;);</span><br><span class="line">var oBtn = document.querySelector(&apos;button&apos;);</span><br><span class="line"></span><br><span class="line">var data = [</span><br><span class="line">rnd(100, 1000),</span><br><span class="line">rnd(100, 1000),</span><br><span class="line">rnd(100, 1000),</span><br><span class="line">rnd(100, 1000),</span><br><span class="line">rnd(100, 1000)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">var start = 0;</span><br><span class="line"></span><br><span class="line">var sum = sumUp(data);</span><br><span class="line"></span><br><span class="line">data.forEach(function(number, index) &#123;</span><br><span class="line">var color = `rgb($&#123;rnd(0,255)&#125;,$&#123;rnd(0,255)&#125;,$&#123;rnd(0,255)&#125;)`;</span><br><span class="line"></span><br><span class="line">var delta = number / sum * 2 * Math.PI;</span><br><span class="line"></span><br><span class="line">ctx.fillStyle = color;</span><br><span class="line"></span><br><span class="line">ctx.beginPath();</span><br><span class="line"></span><br><span class="line">ctx.moveTo(300, 200)</span><br><span class="line">ctx.arc(300, 200, 100, start, start + delta, false);</span><br><span class="line">ctx.lineTo(300, 200)</span><br><span class="line"></span><br><span class="line">ctx.fill();</span><br><span class="line"></span><br><span class="line">start = start + delta;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">function sumUp(array) &#123;</span><br><span class="line">var sum = 0;</span><br><span class="line"></span><br><span class="line">array.forEach(function(n) &#123;</span><br><span class="line">sum += n</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">return sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function rnd(n, m) &#123;</span><br><span class="line">return parseInt(Math.random() * (m - n) + n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// **下载canvas图片</span><br><span class="line">oBtn.onclick = function() &#123;</span><br><span class="line">var oA = document.createElement(&apos;a&apos;);</span><br><span class="line">oA.href = oC.toDataURL();</span><br><span class="line">oA.download = &apos;默认命名&apos;;</span><br><span class="line">// oA.download = fileName.value ? fileName.value : &apos;默认命名&apos; + &apos;.png&apos;;</span><br><span class="line"></span><br><span class="line">oA.click();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="7-应用-canvas运动回调"><a href="#7-应用-canvas运动回调" class="headerlink" title="(7) 应用 canvas运动回调"></a>(7) 应用 canvas运动回调</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">function loadStatics(statics, callback) &#123;</span><br><span class="line">var count = 0;</span><br><span class="line"></span><br><span class="line">statics.forEach(function(path, index) &#123;</span><br><span class="line">var oImage = new Image();</span><br><span class="line">oImage.src = `img/$&#123;path&#125;.png`</span><br><span class="line"></span><br><span class="line">resources[path] = oImage;</span><br><span class="line"></span><br><span class="line">oImage.onload = function() &#123;</span><br><span class="line"></span><br><span class="line">count++</span><br><span class="line"></span><br><span class="line">if (count == statics.length) &#123;</span><br><span class="line">callback &amp;&amp; callback();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function d2a(d) &#123;</span><br><span class="line">return d / 180 * Math.PI</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function a2d(a) &#123;</span><br><span class="line">return a / Math.PI * 180</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function rnd(n, m) &#123;</span><br><span class="line">return parseInt(Math.random() * (m - n) + n)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function rndSign() &#123;</span><br><span class="line">return Math.random() &lt; 0.5 ? -1 : 1</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="8-canvas框架-jCanvaScript-js"><a href="#8-canvas框架-jCanvaScript-js" class="headerlink" title="(8) canvas框架 jCanvaScript.js"></a>(8) canvas框架 jCanvaScript.js</h3><p><a href="http://jcscript.com/" target="_blank" rel="noopener">jCanvaScript.js</a></p><p>示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas id=&quot;c1&quot; width=&quot;500&quot; height=&quot;500&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script src=&quot;libs/jCanvaScript.1.5.18.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var idCanvas = &quot;c1&quot;;</span><br><span class="line">    onload_1();</span><br><span class="line"></span><br><span class="line">    var interval_1 = 0;</span><br><span class="line"></span><br><span class="line">    function startShow() &#123;</span><br><span class="line">        var r = Math.floor(Math.random() * (254)),</span><br><span class="line">            g = Math.floor(Math.random() * (254)),</span><br><span class="line">            b = Math.floor(Math.random() * (254)),</span><br><span class="line">            x = Math.floor(Math.random() * (439)),</span><br><span class="line">            y = Math.floor(Math.random() * (554)),</span><br><span class="line">            color = &quot;rgba(&quot; + r + &quot;, &quot; + g + &quot;, &quot; + b + &quot;, 0.5)&quot;,</span><br><span class="line">            filled = true,</span><br><span class="line">            radius = 1;</span><br><span class="line">        jc.circle(x, y, radius, color, filled)</span><br><span class="line">            .animate(&#123;</span><br><span class="line">                radius: 100,</span><br><span class="line">                opacity: 0</span><br><span class="line">            &#125;, 1500, function() &#123;</span><br><span class="line">                this.del();</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function onload_1() &#123;</span><br><span class="line">        jc.start(idCanvas, true);</span><br><span class="line">        interval_1 = setInterval(startShow, 200);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function start_1(idCanvas) &#123;</span><br><span class="line">        if (interval_1) return;</span><br><span class="line">        onload_1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function stop_1(idCanvas) &#123;</span><br><span class="line">        clearInterval(interval_1);</span><br><span class="line">        interval_1 = 0;</span><br><span class="line">        jc.clear(idCanvas);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！</p><p>公众号是坚持日更的，不发文的时候推送一些我觉得好用的前端网站或者看到的一些问题的解决方案，也更便于大家交流，就酱。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;(1) 应用 canvas笑脸&lt;/li&gt;
&lt;li&gt;(2) 应用 canvas画图&lt;/li&gt;
&lt;li&gt;(3) 应用 canvas变换&lt;/li&gt;
&lt;li&gt;(4) 应用 canvas内长方形拖拽&lt;/li&gt;
&lt;li&gt;(5) 应用 canvas内圆形拖拽&lt;/li&gt;
&lt;li&gt;(6) 应用 下载canvas绘图&lt;/li&gt;
&lt;li&gt;(7) 应用 canvas运动回调&lt;/li&gt;
&lt;li&gt;(8) canvas框架 jCanvaScript.js&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="HTML5" scheme="https://wangchloe.vip/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：HTML5(canvas)</title>
    <link href="https://wangchloe.vip/2017/04/06/blog34/"/>
    <id>https://wangchloe.vip/2017/04/06/blog34/</id>
    <published>2017-04-05T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:48.769Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><h2 id="13-H5画布-canvas"><a href="#13-H5画布-canvas" class="headerlink" title="13. H5画布 canvas"></a>13. H5画布 canvas</h2><p>基于 JavaScript 的绘图 API</p><p><code>&lt;canvas&gt;&lt;/canvas&gt;</code></p><p>获取绘图上下文<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> oC = <span class="built_in">document</span>.querySelector(<span class="string">'canvas'</span>);</span><br><span class="line">    <span class="keyword">var</span> ctx = oC.getContext(<span class="string">'2d'</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p>ctx.</p><ul><li>moveTo(x, y)  移动</li><li>lineTo(x, y)  划线</li><li>fillStyle = “color”  更改填充颜色</li><li>fill()  填充</li><li>strokeStyle = “color”  更改描边样式</li><li>stroke()  描边</li></ul><ul><li><p>矩形<br>ctx.</p><ul><li>fillRect(x, y, w, h)  填充矩形(没有路径)</li><li>strokeRect(x, y, w, h)  描边矩形(没有路径)</li><li>rect(x, y, w, h)  举行路径</li><li>clearRect(x, y, w, h)  清空区域</li></ul></li><li><p>弧<br>ctx.</p><ul><li>arc(cx, cy, r, startDegree, endDegree, anticlockwise)  圆心x，圆心y，半径，起始角度(弧度制)，结束角度(弧度制)，是否逆时针</li><li>fill()  填充</li></ul></li><li><p>文本<br>ctx.</p><ul><li>font = “字号 字体”</li><li>textAlign = “left/center/right”  竖轴对齐方式</li><li>textBaseline =”top/middle/bottom” 横轴对齐方式</li><li>fillText(‘文字’, x, y)  填充文字</li><li>strokeText(‘文字’, x, y)  描边文字</li><li>measureText(‘文字’)  返回文字长度(width)</li></ul></li></ul><p>ctx.</p><ul><li>beginPath()  开始路径</li><li>closePath()  闭合路径</li></ul><ul><li><p>线条样式<br>ctx.</p><ul><li>lineCap = “round/butt(默认)/square”  更改线帽</li><li>lineJoin = “round/miter(默认)/bevel(切角)”  更改连接点样式</li><li>lineWidth = 20  线宽</li></ul></li><li><p>阴影<br>ctx.</p><ul><li>shadowColor 设置或返回阴影颜色</li><li>shadowBlur  设置或返回阴影模糊级别</li><li>shadowOffsetX   设置或返回阴影距形状的水平距离</li><li>shadowOffsetY   设置或返回阴影距形状的垂直距离</li></ul></li><li><p>渐变<br>ctx.</p><ul><li>createLinearGradient(x0, y0, x1, y1)  创建线性渐变 起始位置 结束位置（用在画布内容上）</li><li>createPattern(img, “repeat|repeat-x|repeat-y|no-repeat”)    在指定的方向上重复指定的元素</li><li>createRadialGradient(x0, y0, r0, x1, y1, r1)    创建径向渐变 起始位置 结束位置（用在画布内容上）</li><li>addColorStop(位置, 颜色)    规定渐变对象中的颜色和停止位置(0~1)</li></ul></li><li><p>画图<br>ctx.</p><ul><li>drawImage(img, x, y)  在画布上绘制图像、画布或视频</li><li>drawImage(img, x, y, width, height)</li><li><p>drawImage(img, sx, sy, swidth, sheight, x, y, width, height)  剪切图像，并在画布上定位被剪切的部分 s-裁剪</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var oC = document.querySelector(&apos;canvas&apos;);</span><br><span class="line">    var ctx = oC.getContext(&apos;2d&apos;);</span><br><span class="line"></span><br><span class="line">    var oImage = new Image();</span><br><span class="line">    oImage.src = &apos;xxx.png&apos;;</span><br><span class="line"></span><br><span class="line">    oImage.onload = function() &#123;</span><br><span class="line">        ctx.drawImage(oImage, 0, 0);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>像素操作<br>ctx.</p><ul><li>getImageData(x, y, w, h)  画布指定矩形复制像素数据  <strong>需服务器环境</strong><br>imgData包括{data, width, height}  其中data是像素数组<ul><li>red=imgData.data[0];</li><li>green=imgData.data[1];</li><li>blue=imgData.data[2];</li><li>alpha=imgData.data[3];</li></ul></li><li>putImageData(imgData, x, y) 将图像数据放回画布</li></ul></li><li><p>变换<br>ctx.</p><ul><li>scale(sW, sH)   缩放当前绘图至更大或更小</li><li>rotate(角度*Math.PI/180)  旋转当前绘图</li><li><p>translate(x, y) 重新映射画布上的 (0,0) 位置</p><blockquote><p>注意translate和moveTo的区别</p></blockquote></li><li><p>transform(a,b,c,d,e,f)  替换绘图的当前转换矩阵(相对变化)  水平缩放 水平倾斜 垂直倾斜 垂直缩放 水平移动 垂直移动</p></li><li>setTransform(a,b,c,d,e,f)   将当前转换重置为单位矩阵(不相对变化)  水平缩放 水平倾斜 垂直倾斜 垂直缩放 水平移动 垂直移动</li></ul></li></ul><p>ctx.</p><ul><li>isPointInPath(x, y)  点是否在路径内</li></ul><p>ctx.</p><ul><li>save()  保存当前环境的状态</li><li>restore()   返回之前保存过的路径状态和属性</li></ul><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！</p><p>公众号是坚持日更的，不发文的时候推送一些我觉得好用的前端网站或者看到的一些问题的解决方案，也更便于大家交流，就酱。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;13-H5画布-canvas&quot;&gt;&lt;a href=&quot;#13-H5画布-canvas&quot; class=&quot;headerlink&quot; title=&quot;13. H5画布 canvas&quot;&gt;&lt;/a&gt;13. H5画布 canvas&lt;/h2&gt;&lt;p&gt;基于 JavaScript 的绘图 API&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;获取绘图上下文&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oC = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ctx = oC.getContext(&lt;span class=&quot;string&quot;&gt;&#39;2d&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="HTML5" scheme="https://wangchloe.vip/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：HTML5(线程、websocket)</title>
    <link href="https://wangchloe.vip/2017/04/04/blog33/"/>
    <id>https://wangchloe.vip/2017/04/04/blog33/</id>
    <published>2017-04-03T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:49.550Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><ul><li>H5 web工作线程 webworker<ul><li>(1) 方法</li><li>(2) 示例</li></ul></li><li>H5 webSocket 网络套接字</li></ul><a id="more"></a><hr><h2 id="11-H5-web工作线程-webworker"><a href="#11-H5-web工作线程-webworker" class="headerlink" title="11. H5 web工作线程 webworker"></a>11. H5 web工作线程 webworker</h2><ul><li>进程</li><li>线程</li></ul><p><code>var worker = new Worker(&#39;js文件&#39;);</code>  新建worker</p><blockquote><ol><li>需在服务器环境下<ol start="2"><li>不会改变数据类型</li><li>不会改变父线程数据</li><li>DOM/BOM 不可使用(console.log可用)</li><li>只能有一层子线程，子线程不可再开子线程</li></ol></li></ol></blockquote><h3 id="1-方法"><a href="#1-方法" class="headerlink" title="(1) 方法"></a>(1) 方法</h3><ul><li>worker.postMessage(‘Data’)  向worker内传递数据 (1)</li><li>worker.onmessage 监听事件 (4)</li><li>worker.terminate 停止worker</li></ul><p>worker内部<br>监听事件：</p><ul><li>this.onmessage -&gt; ev -&gt; ev.data //‘Data’ (2)</li><li>this.postMessage 向父线程传递数据  (3)</li></ul><h3 id="2-示例"><a href="#2-示例" class="headerlink" title="(2) 示例"></a>(2) 示例</h3><ul><li>主程序</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> worker = <span class="keyword">new</span> Worker(<span class="string">'./calc.js'</span>);</span><br><span class="line"></span><br><span class="line">    worker.postMessage(<span class="number">2</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>calc.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">this</span>.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(ev.data)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fibonacci</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( n == <span class="number">1</span> || n == <span class="number">2</span> ) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fibonacci(n<span class="number">-1</span>) + fibonacci(n<span class="number">-2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-H5-webSocket-网络套接字"><a href="#12-H5-webSocket-网络套接字" class="headerlink" title="12. H5 webSocket 网络套接字"></a>12. H5 webSocket 网络套接字</h2><ul><li><p>客户端<br>  1.发消息 -&gt; emit<br>  2.接消息 -&gt; on</p></li><li><p>服务端<br>  1.接消息 -&gt; on<br>  2.发消息 -&gt; emit</p></li></ul><p>在以前 HTTP 协议中所谓的 keep-alive connection 是指在一次 TCP 连接中完成多个 HTTP 请求，但是对每个请求仍然要单独发 header。</p><p>WebSocket 解决的第一个问题是，通过第一个 HTTP request 建立了 TCP 连接之后，之后的交换数据都不需要再发 HTTP request了，使得这个长连接变成了一个真.长连接。</p><blockquote><p>Websocket只需要一次HTTP握手，所以说整个通讯过程是建立在一次连接/状态中，也就避免了HTTP的非状态性，服务端会一直知道你的信息，直到你关闭请求，这样就解决了接线员要反复解析HTTP协议。</p></blockquote><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！</p><p>公众号是坚持日更的，不发文的时候推送一些我觉得好用的前端网站或者看到的一些问题的解决方案，也更便于大家交流，就酱。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;H5 web工作线程 webworker&lt;ul&gt;
&lt;li&gt;(1) 方法&lt;/li&gt;
&lt;li&gt;(2) 示例&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;H5 webSocket 网络套接字&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="HTML5" scheme="https://wangchloe.vip/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>我为什么不考研</title>
    <link href="https://wangchloe.vip/2017/04/04/life3/"/>
    <id>https://wangchloe.vip/2017/04/04/life3/</id>
    <published>2017-04-03T19:12:48.000Z</published>
    <updated>2019-07-23T09:47:15.074Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>  虽然距离17届考研结束已经很久很久了，但还是突发奇想来讨论这个话题。</p><p>  我旁边很多朋友选择考研，我自己的六人寝里头就有五个考研党，也就是说除了我大家都选择了考研。</p><p>  先不说我为什么不考研，我就近问我这些室友为什么考研，得到的答案让我诧异又苦笑。</p><a id="more"></a><p>  他们说因为不想工作，惧怕工作，所以只能选择考研，而且还有可能因为这个原因一直读到博士。</p><p>  这个答案是我没有想到的，我原以为是因为想要工作时有更多的优势，或者是想潜心更深入钻研。</p><p>  我认识的朋友里面有考研数学打出147的，有考上交大大数据方向的，有考上复旦的。但还有更多的是类似于这些不想工作的结局大多是没有得到满意的结果。</p><p>  因为从头就没想过考研所以我对考研这件事情是没有多少了解和认知的，我都不知道读研还要交学费这回事，😂笑哭。只能看到身边考研的这些人很匆忙，年前开始各种准备，买书、买视频、报培训班各种忙活，看来考研难度着实不小，但我没有这种经历是没有话语权的。</p><p>  而我为什么不考研，理由其实也很简单。我个人觉得在学校待着读书近二十年，平时无所事事追剧追综艺，到了期末就开始一周周地通宵刷题，虽然这样都能年年能拿奖学金，可以说至少我保本校研是件很轻松的事。但我天生是个不安分的人，所以选择不再继续这种无所事事的环境了。再者我认为计算机这行更多在于实践，书本上得来的总觉得生涩且不易理解通透。而且女生念完本科已经22岁了，再读个研得25 26了，我不想把不多的青春年少耗费在一件不热衷的事情上。</p><p>  上学时我是憧憬工作的，像电视剧的OL那样穿个小裙子踩双细高跟👠，然后徜徉在上海的陆家嘴，这应该就是大都市的魅力。</p><p>  😂谁知道做程序员这行用不上我备好的黑西装和细高跟，落灰也只能闲置在家。</p><p>  我还记得初中生物背了很久的一句“生物适应环境，环境影响生物”，我大概是把前者发挥地淋漓尽致的那类，也许可以归为一个处女座♍️的属性之一。这也是我没有惧怕工作的原因，无论到了什么样的环境，都能以最短的时间把自己及周边安顿好且舒适。我的室友经常讶异于我储物箱里各种使用的小工具又或者超龄的面面俱到的处事方式。从去年七月至今，想想我已经在外租住第十个月了，索性还能把自己的生活打理的不错，学会买菜做饭，一周打扫一次房间，除了堪忧且日渐增长的拖延症和健忘。</p><p>  从小到大我也上过很多类别的培训班，画画、毛笔字、小提琴、游泳，然而却没有一项能坚持到现在。所以我很庆幸至少现在做的是一件自己能感兴趣并且近年内能钻研下去的一个行业。</p><p>  我更庆幸从小到大所有重大决定都是我自己做的，也感谢父母无论何时都尊重我的决定。所以我没有埋怨父母的机会，也不会让自己后悔。选择不去最好的高中，选择就读的大学，选择不入党，选择计算机专业，选择不考研，选择留在上海。毕竟人的路只有一条，选择岔路口的左拐角你就不会再有机会知道右拐角的风景是什么样子，所以大胆往前走好了。🤷‍妹妹你大胆地往前走哇。</p><p>  说这些并没有呵责谁的意思，纯属闲聊瞎侃，每个人都该有自己的想法，只想论述下自己对考研和不考研的观点。我也祝福那些得以在更高学府深造的同学，能看到不一样的风景，不同层次的导师同学。</p><p>  祝福大家都能不乱于心，不困于情，不念过去，不畏将来。</p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  虽然距离17届考研结束已经很久很久了，但还是突发奇想来讨论这个话题。&lt;/p&gt;
&lt;p&gt;  我旁边很多朋友选择考研，我自己的六人寝里头就有五个考研党，也就是说除了我大家都选择了考研。&lt;/p&gt;
&lt;p&gt;  先不说我为什么不考研，我就近问我这些室友为什么考研，得到的答案让我诧异又苦笑。&lt;/p&gt;
    
    </summary>
    
      <category term="你好，陌生人" scheme="https://wangchloe.vip/categories/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E9%99%8C%E7%94%9F%E4%BA%BA/"/>
    
    
      <category term="爱生活" scheme="https://wangchloe.vip/tags/%E7%88%B1%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：HTML5(选择器、自定义属性、存储)</title>
    <link href="https://wangchloe.vip/2017/03/20/blog31/"/>
    <id>https://wangchloe.vip/2017/03/20/blog31/</id>
    <published>2017-03-19T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:50.261Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><ul><li>H5地理位置 geolocation<ul><li>(1) 测试用例</li><li>(2) 百度地图API</li></ul></li><li>H5音频 audio<ul><li>(1) 属性</li><li>(2) 方法</li><li>(3) 应用：钢琴弹奏</li><li>(4) 应用：音乐播放器</li></ul></li></ul><a id="more"></a><hr><h2 id="7-H5地理位置-geolocation"><a href="#7-H5地理位置-geolocation" class="headerlink" title="7. H5地理位置 geolocation"></a>7. H5地理位置 geolocation</h2><p>LBS -&gt; Location Based Service 基于位置服务</p><h3 id="1-测试用例"><a href="#1-测试用例" class="headerlink" title="(1) 测试用例"></a>(1) 测试用例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">window</span>.navigator.geolocation.getCurrentPosition(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="PositionError"><a href="#PositionError" class="headerlink" title="PositionError"></a>PositionError</h4><p>错误码 错误信息</p><ul><li><p><code>code: 1</code><br><code>message: &quot;User denied Geolocation&quot;</code> -&gt; 用户拒绝授权</p></li><li><p><code>code: 1</code><br><code>message: &quot;Only secure origins are allowed (see: https://goo.gl/Y0ZkNV).</code> -&gt; 仅允许HTTPS访问</p></li><li><p><code>code:2</code><br><code>message:&quot;Network location provider at &#39;https://www.googleapis.com/&#39; : No response received.&quot;</code> -&gt; 没翻墙</p></li></ul><h3 id="2-百度地图API"><a href="#2-百度地图API" class="headerlink" title="(2) 百度地图API"></a>(2) 百度地图API</h3><ul><li><p>timestamp 时间戳</p></li><li><p>coords -&gt; 地理坐标</p><ul><li>accuracy:26 -&gt; 精确度</li><li>altitude:null -&gt; 海拔</li><li>altitudeAccuracy:null -&gt; 海拔高度精确度</li><li>heading:null -&gt; 方向</li><li>latitude:31.167638 -&gt; 纬度</li><li>longitude:121.423593 -&gt; 经度</li><li>speed:null -&gt; 速度</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1.0, user-scalable=no&quot; /&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">body, html,#allmap &#123;</span><br><span class="line">user-select: none;</span><br><span class="line">width: 100%;</span><br><span class="line">height: 100%;</span><br><span class="line">overflow: hidden;</span><br><span class="line">margin: 0;</span><br><span class="line">font-family: &quot;微软雅黑&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/api?v=2.0&amp;ak=wmwHFMPxi66GlPBVUrdgEhDzbLUqlSrM&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;title&gt;上海师范大学 - 百度地图&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;allmap&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">var map = new BMap.Map(&quot;allmap&quot;);</span><br><span class="line"></span><br><span class="line">map.centerAndZoom(new BMap.Point(121.423593, 31.167638), 20); // 初始化地图,设置中心点坐标和地图级别</span><br><span class="line"></span><br><span class="line">map.addControl(new BMap.MapTypeControl()); //添加地图类型控件</span><br><span class="line">map.setCurrentCity(&quot;上海&quot;); // 设置地图显示的城市 此项是必须设置的</span><br><span class="line">map.enableScrollWheelZoom(true); //开启鼠标滚轮缩放</span><br><span class="line"></span><br><span class="line">navigator.geolocation.getCurrentPosition(function(res) &#123;</span><br><span class="line">var &#123;</span><br><span class="line">coords: &#123;</span><br><span class="line">longitude,</span><br><span class="line">latitude</span><br><span class="line">&#125;</span><br><span class="line">&#125; = res;</span><br><span class="line"></span><br><span class="line">var point = new BMap.Point(longitude, latitude);</span><br><span class="line"></span><br><span class="line">var marker = new BMap.Marker(point);</span><br><span class="line">map.addOverlay(marker);</span><br><span class="line"></span><br><span class="line">marker.setAnimation(BMAP_ANIMATION_BOUNCE)</span><br><span class="line"></span><br><span class="line">map.panTo(point)</span><br><span class="line">&#125;, function(err) &#123;</span><br><span class="line">console.log(err);</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="8-H5音频-audio"><a href="#8-H5音频-audio" class="headerlink" title="8. H5音频 audio"></a>8. H5音频 audio</h2><ul><li>音频格式：mp3 wma flat ape wav ogg</li></ul><h3 id="1-属性"><a href="#1-属性" class="headerlink" title="(1) 属性"></a>(1) 属性</h3><ul><li>src -&gt; 音频路径</li><li>controls -&gt; 显示自带控制进度条</li><li>loop -&gt; 音频循环</li><li>autoplay -&gt; 自动播放 只有pc端可以实现</li><li><p>muted -&gt; 静音</p></li><li><p>currentTime -&gt; 当前播放时间</p></li><li>duration -&gt; 音频总时间</li><li><p>volume -&gt; 音量 [0,1]</p></li><li><p>ontimeupdate -&gt; 进度更新</p></li><li><p>play -&gt; 是否在播放 返回true/false</p></li><li>pause -&gt; 是否暂停 返回true/false</li></ul><h3 id="2-方法"><a href="#2-方法" class="headerlink" title="(2) 方法"></a>(2) 方法</h3><ul><li>play() -&gt; 播放歌曲</li><li>pause() -&gt; 暂停歌曲</li><li>load() -&gt; 重新加载歌曲</li><li>onended() -&gt; 音频播放完毕</li></ul><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"xxx.mp3"</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span>  <span class="comment">&lt;!-- 显示音频自带播放器样式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自定义播放器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"xxx.mp3"</span> <span class="attr">id</span>=<span class="string">"a1"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span>  <span class="comment">&lt;!-- 只显示下面的按钮 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 进度条 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">value</span>=<span class="string">"100"</span>&gt;</span>音量</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"aPlay()"</span>&gt;</span>播放/暂停<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"aMute()"</span>&gt;</span>静音<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> a1 = <span class="built_in">document</span>.getElementById(<span class="string">'a1'</span>);</span><br><span class="line"><span class="keyword">var</span> progress = <span class="built_in">document</span>.querySelector(<span class="string">'.progress'</span>);</span><br><span class="line"><span class="keyword">var</span> oInner = <span class="built_in">document</span>.querySelector(<span class="string">'.inner'</span>);</span><br><span class="line"><span class="keyword">var</span> oRange = <span class="built_in">document</span>.querySelector(<span class="string">'[type=range]'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义进度条</span></span><br><span class="line"><span class="comment">// setInterval(function() &#123;</span></span><br><span class="line"><span class="comment">// oInner.style.width = (a1.currentTime / a1.duration) * 100 + '%';</span></span><br><span class="line"><span class="comment">// &#125;, 16);</span></span><br><span class="line"></span><br><span class="line">a1.ontimeupdate = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">oInner.style.width = (a1.currentTime / a1.duration) * <span class="number">100</span> + <span class="string">'%'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">progress.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">clientX</span></span></span><br><span class="line"><span class="function"><span class="params">&#125;</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> leftDelta = clientX - <span class="keyword">this</span>.offsetLeft;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> percentage = leftDelta / <span class="keyword">this</span>.offsetWidth;</span><br><span class="line"></span><br><span class="line">a1.currentTime = a1.duration * percentage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">oRange.oninput = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">a1.volume = <span class="keyword">this</span>.value/<span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aPlay</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a1.paused) &#123;</span><br><span class="line">a1.play();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">a1.pause();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aMute</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">a1.muted = !oA.muted;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-应用：钢琴弹奏"><a href="#3-应用：钢琴弹奏" class="headerlink" title="(3) 应用：钢琴弹奏"></a>(3) 应用：钢琴弹奏</h3><ul><li><strong>sound.js</strong></li></ul><p>钢琴示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;钢琴示例&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">user-select: none;</span><br><span class="line">&#125;</span><br><span class="line">ul, li &#123;</span><br><span class="line">list-style: none;</span><br><span class="line">margin: 0;</span><br><span class="line">padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">ul &#123;</span><br><span class="line">width: 400px;</span><br><span class="line">margin: 40px auto;</span><br><span class="line">&#125;</span><br><span class="line">li &#123;</span><br><span class="line">width: 38px;</span><br><span class="line">border: 1px solid black;</span><br><span class="line">height: 198px;</span><br><span class="line">float: left;</span><br><span class="line">text-align: center;</span><br><span class="line">line-height: 350px;</span><br><span class="line">margin-left: 10px;</span><br><span class="line">transform-origin: top center;</span><br><span class="line">&#125;</span><br><span class="line">li:active &#123;</span><br><span class="line">transform: perspective(800px) rotateX(-10deg);</span><br><span class="line">&#125;</span><br><span class="line">li.active &#123;</span><br><span class="line">transform: perspective(800px) rotateX(-10deg);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;1&lt;/li&gt;</span><br><span class="line">&lt;li&gt;2&lt;/li&gt;</span><br><span class="line">&lt;li&gt;3&lt;/li&gt;</span><br><span class="line">&lt;li&gt;4&lt;/li&gt;</span><br><span class="line">&lt;li&gt;5&lt;/li&gt;</span><br><span class="line">&lt;li&gt;6&lt;/li&gt;</span><br><span class="line">&lt;li&gt;7&lt;/li&gt;</span><br><span class="line">&lt;li&gt;8&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;script src=&quot;statics/sound.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var aLi = document.querySelectorAll(&apos;li&apos;);</span><br><span class="line"></span><br><span class="line">aLi.forEach(function(oLi, index) &#123;</span><br><span class="line">oLi.onmousedown = function() &#123;</span><br><span class="line">playSound(index + 49);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">window.onkeydown = function(&#123;</span><br><span class="line">keyCode</span><br><span class="line">&#125;) &#123;</span><br><span class="line">playSound(keyCode);</span><br><span class="line"></span><br><span class="line">aLi[keyCode - 49].classList.add(&apos;active&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">window.onkeyup = function(&#123;</span><br><span class="line">keyCode</span><br><span class="line">&#125;) &#123;</span><br><span class="line">if (keyCode &gt;= 49 &amp;&amp; keyCode &lt;= 56) &#123;</span><br><span class="line">aLi[keyCode - 49].classList.remove(&apos;active&apos;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function playSound(index) &#123;</span><br><span class="line">new Audio(oggSound[`sound$&#123;index&#125;`]).play();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="4-应用：音乐播放器"><a href="#4-应用：音乐播放器" class="headerlink" title="(4) 应用：音乐播放器"></a>(4) 应用：音乐播放器</h3><ul><li>歌词显示</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">#box &#123;</span><br><span class="line">width: 200px;</span><br><span class="line">margin: 40px auto;</span><br><span class="line">text-align: center;</span><br><span class="line">padding: 10px;</span><br><span class="line">border: 2px solid black;</span><br><span class="line">-webkit-background-clip: text;</span><br><span class="line">background-image: linear-gradient(90deg, red 30%, blue 30%);</span><br><span class="line">color: transparent;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;box&quot;&gt;</span><br><span class="line">西湖的水我的泪</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var progress = 0;</span><br><span class="line">var oBox = document.querySelector(&apos;div&apos;);</span><br><span class="line"></span><br><span class="line">setInterval(function() &#123;</span><br><span class="line">oBox.style.backgroundImage = `linear-gradient(90deg,red $&#123;progress&#125;%,blue $&#123;progress&#125;%)`</span><br><span class="line"></span><br><span class="line">progress += 0.4;</span><br><span class="line">&#125;, 16)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;H5地理位置 geolocation&lt;ul&gt;
&lt;li&gt;(1) 测试用例&lt;/li&gt;
&lt;li&gt;(2) 百度地图API&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;H5音频 audio&lt;ul&gt;
&lt;li&gt;(1) 属性&lt;/li&gt;
&lt;li&gt;(2) 方法&lt;/li&gt;
&lt;li&gt;(3) 应用：钢琴弹奏&lt;/li&gt;
&lt;li&gt;(4) 应用：音乐播放器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="HTML5" scheme="https://wangchloe.vip/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：HTML5(选择器、自定义属性、存储)</title>
    <link href="https://wangchloe.vip/2017/03/19/blog30/"/>
    <id>https://wangchloe.vip/2017/03/19/blog30/</id>
    <published>2017-03-18T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:51.048Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><ul><li>H5选择器补充<ul><li>querySelectorAll 对比 getElements 的优势</li><li>jQuery的选择器即是querySelectorAll</li></ul></li><li>H5自定义属性 dataset</li><li>H5元素类名操作 classList<ul><li>隐式原型上的方法(不一一列举)</li></ul></li><li>H5本地存储 localStorage<ul><li>Web Storage实际上由两部分组成：sessionStorage与localStorage</li><li>sessionStorage与localStorage操作相同</li></ul></li></ul><a id="more"></a><hr><h2 id="3-H5选择器补充"><a href="#3-H5选择器补充" class="headerlink" title="3. H5选择器补充"></a>3. H5选择器补充</h2><p>*兼容：IE8+</p><ul><li><p>document/dom.querySelector() 匹配指定 css 选择器的一个元素</p></li><li><p>querySelectorAll()  匹配指定 css 选择器的所有元素 (NodeList)</p></li></ul><blockquote><p><strong>注意：</strong> querySelectorAll()方法得到的类数组对象是非动态实时的</p></blockquote><h3 id="querySelectorAll-对比-getElements-的优势"><a href="#querySelectorAll-对比-getElements-的优势" class="headerlink" title="querySelectorAll 对比 getElements 的优势"></a>querySelectorAll 对比 getElements 的优势</h3><p>可以操作数组</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> aBox = <span class="built_in">document</span>.querySelectorAll(<span class="string">'div'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// getElements得到的是伪数组，不能操作各项的属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var aBox = document.getElementsByTagName('div');</span></span><br><span class="line"><span class="comment">// for (var i = 0; i &lt; aBox.length; i++) &#123;</span></span><br><span class="line"><span class="comment">// aBox[i].onclick = function() &#123;</span></span><br><span class="line"><span class="comment">// alert(1);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">aBox.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">item.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">alert(index);</span><br><span class="line"><span class="comment">// 弹出当前点击div的索引值，依次为0、1、2</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="jQuery的选择器即是querySelectorAll"><a href="#jQuery的选择器即是querySelectorAll" class="headerlink" title="jQuery的选择器即是querySelectorAll"></a>jQuery的选择器即是querySelectorAll</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">selector</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> items = <span class="built_in">document</span>.querySelectorAll(selector);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(items.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> items;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (items.length == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> items[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-H5自定义属性-dataset"><a href="#4-H5自定义属性-dataset" class="headerlink" title="4. H5自定义属性 dataset"></a>4. H5自定义属性 dataset</h2><p><a href="http://www.zhangxinxu.com/wordpress/2011/06/html5%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7%E5%AF%B9%E8%B1%A1dataset%E7%AE%80%E4%BB%8B/" target="_blank" rel="noopener">HTML5自定义属性对象Dataset简介</a></p><p><a href="http://www.zhangxinxu.com/wordpress/2013/03/html5-datalist-%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8-%E5%8F%AF%E8%A1%8C%E6%80%A7/" target="_blank" rel="noopener">HTML5 datalist在实际项目中应用的可行性研究</a></p><p>示例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">data-link</span>=<span class="string">"#"</span> <span class="attr">data-user-name</span>=<span class="string">"chloe"</span>&gt;</span>wangchloe.vip<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> oA = <span class="built_in">document</span>.querySelector(<span class="string">'a'</span>);</span><br><span class="line">oA.dataset.link = <span class="string">'http://wangchloe.vip'</span>;</span><br><span class="line">oA.href = oA.dataset.link + <span class="string">'?name='</span> + oA.dataset.userName;</span><br><span class="line"><span class="comment">// http://wangchloe.vip?name=chloe</span></span><br><span class="line"><span class="comment">// *注意：两个及以上属性名调用时需转化为驼峰命名</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-H5元素类名操作-classList"><a href="#5-H5元素类名操作-classList" class="headerlink" title="5. H5元素类名操作 classList"></a>5. H5元素类名操作 classList</h2><p><a href="http://www.zhangxinxu.com/wordpress/2013/07/domtokenlist-html5-dom-classlist-%E7%B1%BB%E5%90%8D/" target="_blank" rel="noopener">HTML5 DOM元素类名相关操作API classList简介</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 该示例来源于张鑫旭个人博客 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"a b c"</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body.classList);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body.className);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body.classList.toString() === <span class="built_in">document</span>.body.className;)<span class="comment">// true</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>HTML5 DOM元素类名相关操作API classList简介&gt;&gt;&gt;测试</p></blockquote><p><img src="http://img.blog.csdn.net/20170110000715296?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdzk1MDkxNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="HTML5 DOM元素类名相关操作API classList简介&gt;&gt;&gt;测试"></p><h3 id="隐式原型上的方法-不一一列举"><a href="#隐式原型上的方法-不一一列举" class="headerlink" title="隐式原型上的方法(不一一列举)"></a>隐式原型上的方法(不一一列举)</h3><ul><li><p>obj.add(cName1, cName2, …);</p></li><li><p>obj.remove(cName1, cName2, …);</p></li><li><p>obj.toggle(cName);</p></li><li><p>obj.contains(cName);</p></li></ul><h2 id="6-H5本地存储-localStorage"><a href="#6-H5本地存储-localStorage" class="headerlink" title="6. H5本地存储 localStorage"></a>6. H5本地存储 localStorage</h2><p><a href="http://www.zhangxinxu.com/wordpress/2011/09/html5-localstorage%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E4%B8%BE%E4%BE%8B/" target="_blank" rel="noopener">HTML5 localStorage本地存储实际应用举例</a></p><p><strong>cookie &amp;&amp; localStorage &amp;&amp; sessionStorage</strong> (来源CSDN)</p><ul><li><p>共同点：<br>   都是保存在浏览器端，且同源的。</p></li><li><p>不同点：</p><ol><li><p>cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递。而sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。</p></li><li><p>cookie数据还有路径（path）的概念，可以限制cookie只属于某个路径下。</p></li><li><p>存储大小限制也不同，cookie数据不能超过4k，同时因为每次http请求都会携带cookie，所以cookie只适合保存很小的数据，如会话标识。sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。</p></li><li><p>数据有效期不同，sessionStorage：仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持；localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie只在设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭。</p></li><li><p>作用域不同，sessionStorage不在不同的浏览器窗口中共享，即使是同一个页面；localStorage 在所有同源窗口中都是共享的；cookie也是在所有同源窗口中都是共享的。</p></li><li><p>Web Storage 支持事件通知机制，可以将数据更新的通知发送给监听者。Web Storage 的 api 接口使用更方便。</p></li></ol></li></ul><h3 id="Web-Storage实际上由两部分组成：sessionStorage与localStorage"><a href="#Web-Storage实际上由两部分组成：sessionStorage与localStorage" class="headerlink" title="Web Storage实际上由两部分组成：sessionStorage与localStorage"></a>Web Storage实际上由两部分组成：sessionStorage与localStorage</h3><ul><li><p>sessionStorage用于本地存储一个会话(session)中的数据，这些数据只有在同一个会话中的页面才能访问并且当前会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。</p></li><li><p>localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。</p></li></ul><blockquote><p>*兼容：可以先测试，以确定window.localStorage是否存在。</p></blockquote><h3 id="sessionStorage与localStorage操作相同"><a href="#sessionStorage与localStorage操作相同" class="headerlink" title="sessionStorage与localStorage操作相同"></a>sessionStorage与localStorage操作相同</h3><ul><li>设置</li></ul><p><code>localStorage.key = value;</code></p><p><code>localStorage.setItem(key, value);</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> userName = <span class="string">'chloe'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//存储，IE6~7 cookie 其他浏览器HTML5本地存储</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.localStorage) &#123;</span><br><span class="line">localStorage.setItem(<span class="string">"name"</span>, userName);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">Cookie.write(<span class="string">"name"</span>, userName);<span class="comment">// MooTools框架下cookie的写法</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>读取</li></ul><p><code>localStorage.key;</code></p><p><code>localStorage.getItem(key);</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> userName = <span class="built_in">window</span>.localStorage ? localStorage.getItem(<span class="string">"name"</span>) : Cookie.read(<span class="string">"name"</span>); <span class="comment">// MooTools框架下cookie的写法</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>遍历</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> storage = <span class="built_in">window</span>.localStorage;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = storage.length; i &lt; len; i++) &#123;</span><br><span class="line"><span class="keyword">var</span> key = storage.key(i);</span><br><span class="line"><span class="keyword">var</span> value = storage.getItem(key);</span><br><span class="line"><span class="built_in">console</span>.log(key + <span class="string">"="</span> + value);</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>删除</li></ul><p><code>delete localStorage.key;</code></p><p><code>localStorage.removeItem(key);</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.localStorage) &#123;</span><br><span class="line">localStorage.removeItem(<span class="string">"name"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">Cookie.dispose(<span class="string">'name'</span>); <span class="comment">// MooTools框架下cookie的写法</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>清空</li></ul><p><code>localStorage.clear();</code></p><ul><li>监听<br><code>window.onStorage</code> 监听localStorage变化</li></ul><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;H5选择器补充&lt;ul&gt;
&lt;li&gt;querySelectorAll 对比 getElements 的优势&lt;/li&gt;
&lt;li&gt;jQuery的选择器即是querySelectorAll&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;H5自定义属性 dataset&lt;/li&gt;
&lt;li&gt;H5元素类名操作 classList&lt;ul&gt;
&lt;li&gt;隐式原型上的方法(不一一列举)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;H5本地存储 localStorage&lt;ul&gt;
&lt;li&gt;Web Storage实际上由两部分组成：sessionStorage与localStorage&lt;/li&gt;
&lt;li&gt;sessionStorage与localStorage操作相同&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="HTML5" scheme="https://wangchloe.vip/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：HTML5(新增元素及属性)</title>
    <link href="https://wangchloe.vip/2017/03/18/blog29/"/>
    <id>https://wangchloe.vip/2017/03/18/blog29/</id>
    <published>2017-03-17T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:52.414Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>以下内容若有问题烦请即时告知我予以修改，以免误导更多人。</p><hr><ul><li>HTML5语法概要</li><li>H5新增元素<ul><li>(1) 结构元素</li><li>(2) 其他元素</li><li>(3) input元素类型</li><li>(4) *废除的元素</li></ul></li><li>H5新增属性<ul><li>(1) 表单相关属性</li><li>(2) 链接相关属性</li><li>(3) 其他属性</li><li>(4) *废除属性</li><li>(5) 全局属性</li></ul></li></ul><a id="more"></a><hr><p><a href="http://www.zhangxinxu.com/wordpress/2010/08/%E7%BF%BB%E8%AF%91-%E4%BD%A0%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%8428%E4%B8%AAhtml5%E7%89%B9%E5%BE%81%E3%80%81%E7%AA%8D%E9%97%A8%E5%92%8C%E6%8A%80%E6%9C%AF/" target="_blank" rel="noopener">翻译-你必须知道的28个HTML5特征、窍门和技术</a></p><p><a href="http://www.zhangxinxu.com/wordpress/2013/02/github-html5shiv-readme-translate/" target="_blank" rel="noopener">html5shiv项目让IE6-IE9浏览器都支持HTML5中的元素</a></p><h2 id="HTML5语法概要"><a href="#HTML5语法概要" class="headerlink" title="HTML5语法概要"></a>HTML5语法概要</h2><ol><li>内容类型</li><li>DOCTYPE声明</li><li>指定字符编码</li><li>可以省略标记的元素</li><li>具有boolean值的元素</li><li>省略行内属性赋值的引号</li></ol><h2 id="1-H5新增元素"><a href="#1-H5新增元素" class="headerlink" title="1. H5新增元素"></a>1. H5新增元素</h2><p><img src="http://ojvx9eehr.bkt.clouddn.com/H5%E6%A0%87%E7%AD%BE%E9%9B%86%E5%90%88.jpg" alt="H5标签集合"></p><p><img src="http://ojvx9eehr.bkt.clouddn.com/H5%E9%A1%B5%E9%9D%A2%E5%B8%B8%E7%94%A8%E7%BB%93%E6%9E%84.gif" alt="H5页面常用结构"></p><h3 id="1-结构元素"><a href="#1-结构元素" class="headerlink" title="(1) 结构元素"></a>(1) 结构元素</h3><h4 id="section"><a href="#section" class="headerlink" title="section"></a>section</h4><p>对网站内容分块、分段<br>当容器需要被直接定义样式或通过脚本定义行为时，推荐使用div而非section</p><p>结构(标题+内容)<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="article"><a href="#article" class="headerlink" title="article"></a>article</h4><p>代表文档内容 独立性 可嵌套使用<br>可看作特殊的section元素</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="aside"><a href="#aside" class="headerlink" title="aside"></a>aside</h4><p>用来表示当前页面或文章的附属信息(相关引用、侧边栏、广告、导航条)</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>评论<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascipt:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascipt:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="nav"><a href="#nav" class="headerlink" title="nav"></a>nav</h4><p>常见应用：导航条、侧边栏导航、页内导航、翻页操作<br><strong>不能用menu元素代替nav元素</strong></p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="figure"><a href="#figure" class="headerlink" title="figure"></a>figure</h4><h4 id="time"><a href="#time" class="headerlink" title="time"></a>time</h4><p>用来区分各时区或编码</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"2017-1-1"</span>&gt;</span>2017-1-1<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"2017-1-1T20:00"</span>&gt;</span>2017-1-1<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="pubdate"><a href="#pubdate" class="headerlink" title="pubdate"></a>pubdate</h4><p>指明发布时间</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"2017-1-1"</span> <span class="attr">pubdate</span>&gt;</span>2017-1-1<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="header"><a href="#header" class="headerlink" title="header"></a>header</h4><p>header可出现多次</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="footer"><a href="#footer" class="headerlink" title="footer"></a>footer</h4><p>footer可出现多次<br>常见应用：脚注(相关链接、版权信息)</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>版权信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>加入我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="hgroup"><a href="#hgroup" class="headerlink" title="hgroup"></a>hgroup</h4><p>将标题及其子标题进行分组</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>主标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>子标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"2017-1-1"</span>&gt;</span>2017-1-1<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="address"><a href="#address" class="headerlink" title="address"></a>address</h4><p>在文档中呈现联系信息(作者名字、网站连接、电子邮箱、地址、手机号)</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"2017-1-1"</span>&gt;</span>2017-1-1<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="整体应用"><a href="#整体应用" class="headerlink" title="整体应用"></a>整体应用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>a1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>a2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>主标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>子标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>正文<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>评论标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>评论正文<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>版权***<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-其他元素"><a href="#2-其他元素" class="headerlink" title="(2) 其他元素"></a>(2) 其他元素</h3><h4 id="video"><a href="#video" class="headerlink" title="video"></a>video</h4><p>不同浏览器支持的格式不同，可能需要转码，在source标签里引入多种格式</p><p>FF不支持mp4，支持ogg</p><p>controls属性显示自带控制进度条</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"xxx.mp4"</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span>  <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"xxx.mp4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"xxx.ogg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"xxx.mp4"</span> <span class="attr">id</span>=<span class="string">"v1"</span> <span class="attr">width</span>=<span class="string">"400px"</span> <span class="attr">height</span>=<span class="string">"200px"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"play()"</span>&gt;</span>播放/暂停<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> v1 = <span class="built_in">document</span>.getElementById(<span class="string">'v1'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">play</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(v1.paused) &#123;</span><br><span class="line">v1.play();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">v1.pause();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="audio"><a href="#audio" class="headerlink" title="audio"></a>audio</h4><p>controls属性显示自带控制进度条</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"xxx.mp3"</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span>  <span class="comment">&lt;!-- 显示音频自带播放器样式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"xxx.mp3"</span> <span class="attr">id</span>=<span class="string">"a1"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span>  <span class="comment">&lt;!-- 只显示下面的按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"play()"</span>&gt;</span>播放/暂停<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> a1 = <span class="built_in">document</span>.getElementById(<span class="string">'a1'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">play</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a1.paused) &#123;</span><br><span class="line">a1.play();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">a1.pause();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="canvas"><a href="#canvas" class="headerlink" title="canvas"></a>canvas</h4><h4 id="…"><a href="#…" class="headerlink" title="…"></a>…</h4><h3 id="3-input元素类型"><a href="#3-input元素类型" class="headerlink" title="(3) input元素类型"></a>(3) input元素类型</h3><ul><li>email</li><li>url</li><li>number</li><li><p>range</p></li><li><p>date</p></li><li><p>time</p></li><li><p>Date Pickers</p></li></ul><h3 id="4-废除的元素"><a href="#4-废除的元素" class="headerlink" title="(4) *废除的元素"></a>(4) *废除的元素</h3><ul><li>能用CSS替代的元素：basefont、big、center、font、s、tt、u等</li><li>frame框架</li><li>只有部分浏览器支持的元素</li></ul><h2 id="2-H5新增属性"><a href="#2-H5新增属性" class="headerlink" title="2. H5新增属性"></a>2. H5新增属性</h2><h3 id="1-表单相关属性"><a href="#1-表单相关属性" class="headerlink" title="(1) 表单相关属性"></a>(1) 表单相关属性</h3><p>####form<br>form的元素可写在form外，只要指向相同id</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">form</span>=<span class="string">"form1"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="formaction"><a href="#formaction" class="headerlink" title="formaction"></a>formaction</h4><p>不同表单元素不同action路径</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"s1"</span> <span class="attr">value</span>=<span class="string">"v1"</span> <span class="attr">formaction</span>=<span class="string">"fc1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"s2"</span> <span class="attr">value</span>=<span class="string">"v2"</span> <span class="attr">formaction</span>=<span class="string">"fc2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"s3"</span> <span class="attr">value</span>=<span class="string">"v3"</span> <span class="attr">formaction</span>=<span class="string">"fc3"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="formmethod"><a href="#formmethod" class="headerlink" title="formmethod"></a>formmethod</h4><p>不同表单元素不同提交方法</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"s1"</span> <span class="attr">value</span>=<span class="string">"v1"</span> <span class="attr">formmethod</span>=<span class="string">"get"</span> <span class="attr">formaction</span>=<span class="string">"fc1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"s2"</span> <span class="attr">value</span>=<span class="string">"v2"</span> <span class="attr">formmethod</span>=<span class="string">"post"</span> <span class="attr">formaction</span>=<span class="string">"fc2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="formenctype"><a href="#formenctype" class="headerlink" title="formenctype"></a>formenctype</h4><p>不同表单元素不同编码方式</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">formenctype</span>=<span class="string">"text/plain"</span> <span class="attr">value</span>=<span class="string">"表单数据中的空格转换为加号"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">formenctype</span>=<span class="string">"multipart/form-data"</span> <span class="attr">value</span>=<span class="string">"文件上传"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">formenctype</span>=<span class="string">"application/x-www-form-urlencoded"</span> <span class="attr">value</span>=<span class="string">"get方式时把表单数据转换为字符"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">form</span>=<span class="string">"form1"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="formtarget"><a href="#formtarget" class="headerlink" title="formtarget"></a>formtarget</h4><p>不同表单元素不同提交后在何处打开加载页面</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"s1"</span> <span class="attr">value</span>=<span class="string">"v1"</span> <span class="attr">formtarget</span>=<span class="string">"_blank"</span> <span class="attr">formaction</span>=<span class="string">"fc1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"s1"</span> <span class="attr">value</span>=<span class="string">"v1"</span> <span class="attr">formtarget</span>=<span class="string">"_self"</span> <span class="attr">formaction</span>=<span class="string">"fc1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"s1"</span> <span class="attr">value</span>=<span class="string">"v1"</span> <span class="attr">formtarget</span>=<span class="string">"_parent"</span> <span class="attr">formaction</span>=<span class="string">"fc1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"s1"</span> <span class="attr">value</span>=<span class="string">"v1"</span> <span class="attr">formtarget</span>=<span class="string">"_top"</span> <span class="attr">formaction</span>=<span class="string">"fc1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"s1"</span> <span class="attr">value</span>=<span class="string">"v1"</span> <span class="attr">formtarget</span>=<span class="string">"framename"</span> <span class="attr">formaction</span>=<span class="string">"fc1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="autofocus"><a href="#autofocus" class="headerlink" title="autofocus"></a>autofocus</h4><p>表单元素自动获得焦点</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">autofocus</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="require"><a href="#require" class="headerlink" title="require"></a>require</h4><p>提交时内容为空不允许提交，并显示提示</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="labels"><a href="#labels" class="headerlink" title="labels"></a>labels</h4><p>验证提示信息</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"t1"</span> <span class="attr">id</span>=<span class="string">"l1"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"t1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">value</span>=<span class="string">"验证"</span> <span class="attr">onclick</span>=<span class="string">"validate()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> t1 = <span class="built_in">document</span>.getElementById(<span class="string">'t1'</span>);</span><br><span class="line"><span class="keyword">var</span> btn1 = <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span><br><span class="line"><span class="keyword">var</span> fm1 = <span class="built_in">document</span>.getElementById(<span class="string">'form1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(t1.value.trim() == <span class="string">""</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> l1 = <span class="built_in">document</span>.getElementById(<span class="string">'l1'</span>);</span><br><span class="line">l1.setAttribute(<span class="string">'for'</span>, <span class="string">'t1'</span>);</span><br><span class="line">f1.insertBefore(l1, btn1);<span class="comment">// 在button前显示验证提示信息</span></span><br><span class="line">t1.labels[<span class="number">1</span>].innerHTML = <span class="string">'输入为空'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="placeholder"><a href="#placeholder" class="headerlink" title="placeholder"></a>placeholder</h4><p>输入提示信息</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入..."</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="datalist"><a href="#datalist" class="headerlink" title="datalist"></a>datalist</h4><p>可输入的下拉框</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"n1"</span> <span class="attr">list</span>=<span class="string">"ns"</span>&gt;</span>  <span class="comment">&lt;!-- 点击下拉箭头时显示datalist --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">"ns"</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"v1"</span>&gt;</span>v1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"v2"</span>&gt;</span>v2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="autocomplete"><a href="#autocomplete" class="headerlink" title="autocomplete"></a>autocomplete</h4><p>输入自动填充</p><h4 id="pattern"><a href="#pattern" class="headerlink" title="pattern"></a>pattern</h4><p>表单元素正则验证，输入错误时不跳转</p><p>常见结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form1"</span> <span class="attr">action</span>=<span class="string">"xxx"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">pattern</span>=<span class="string">"&#123;a-z&#125;[3]"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="selectionDirection"><a href="#selectionDirection" class="headerlink" title="selectionDirection"></a>selectionDirection</h4><p>*Chrome不支持</p><h4 id="indeterminate"><a href="#indeterminate" class="headerlink" title="indeterminate"></a>indeterminate</h4><p>复选框checkbox 的第三种状态 “尚未明确是否选取”状态</p><h4 id="image按钮的width-height"><a href="#image按钮的width-height" class="headerlink" title="image按钮的width/height"></a>image按钮的width/height</h4><h3 id="2-链接相关属性"><a href="#2-链接相关属性" class="headerlink" title="(2) 链接相关属性"></a>(2) 链接相关属性</h3><h3 id="3-其他属性"><a href="#3-其他属性" class="headerlink" title="(3) 其他属性"></a>(3) 其他属性</h3><h3 id="4-废除属性"><a href="#4-废除属性" class="headerlink" title="(4) *废除属性"></a>(4) *废除属性</h3><h3 id="5-全局属性"><a href="#5-全局属性" class="headerlink" title="(5) 全局属性"></a>(5) 全局属性</h3><p>contentEditable<br>designMode<br>hidden<br>spellcheck       拼写检查<br>tabindex         设置tab键焦点的顺序</p><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容若有问题烦请即时告知我予以修改，以免误导更多人。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;HTML5语法概要&lt;/li&gt;
&lt;li&gt;H5新增元素&lt;ul&gt;
&lt;li&gt;(1) 结构元素&lt;/li&gt;
&lt;li&gt;(2) 其他元素&lt;/li&gt;
&lt;li&gt;(3) input元素类型&lt;/li&gt;
&lt;li&gt;(4) *废除的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;H5新增属性&lt;ul&gt;
&lt;li&gt;(1) 表单相关属性&lt;/li&gt;
&lt;li&gt;(2) 链接相关属性&lt;/li&gt;
&lt;li&gt;(3) 其他属性&lt;/li&gt;
&lt;li&gt;(4) *废除属性&lt;/li&gt;
&lt;li&gt;(5) 全局属性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="HTML5" scheme="https://wangchloe.vip/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>每天10个前端知识点：HTML5目录</title>
    <link href="https://wangchloe.vip/2017/03/16/blog28/"/>
    <id>https://wangchloe.vip/2017/03/16/blog28/</id>
    <published>2017-03-15T19:27:35.000Z</published>
    <updated>2019-07-23T09:17:52.997Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ul><li>HTML5语法概要</li></ul><a id="more"></a><ul><li><ol><li>H5新增元素<ul><li>(1) 结构元素</li><li>(2) 其他元素</li><li>(3) input元素类型</li><li>(4) *废除的元素</li></ul></li></ol></li><li><ol start="2"><li>H5新增属性<ul><li>(1) 表单相关属性</li><li>(2) 链接相关属性</li><li>(3) 其他属性</li><li>(4) *废除属性</li><li>(5) 全局属性</li></ul></li></ol></li><li><ol start="3"><li>H5选择器补充<ul><li>querySelectorAll 对比 getElements 的优势</li><li>jQuery的选择器即是querySelectorAll</li></ul></li></ol></li><li><ol start="4"><li>H5自定义属性 dataset</li></ol></li><li><ol start="5"><li>H5元素类名操作 classList<ul><li>隐式原型上的方法(不一一列举)</li></ul></li></ol></li><li><ol start="6"><li>H5本地存储 localStorage<ul><li>Web Storage实际上由两部分组成：sessionStorage与localStorage</li><li>sessionStorage与localStorage操作相同</li></ul></li></ol></li><li><ol start="7"><li>H5地理位置 geolocation<ul><li>(1) 测试用例</li><li>(2) 百度地图API</li></ul></li></ol></li><li><ol start="8"><li>H5音频 audio<ul><li>(1) 属性</li><li>(2) 方法</li><li>(3) 应用：钢琴弹奏</li><li>(4) 应用：音乐播放器</li></ul></li></ol></li><li><ol start="9"><li>H5视频 video<ul><li>(1) 属性</li><li>(2) 方法</li></ul></li></ol></li><li><ol start="10"><li>H5文件 FileReader<ul><li>(1) 文件拖拽</li><li>(2) File接口</li><li>(3) 示例</li></ul></li></ol></li><li><ol start="11"><li>H5 web工作线程 webworker<ul><li>(1) 方法</li><li>(2) 示例</li></ul></li></ol></li><li><ol start="12"><li>H5 webSocket 网络套接字</li></ol></li><li><ol start="13"><li>H5画布 canvas<ul><li>(1) 应用 canvas笑脸</li><li>(2) 应用 canvas画图</li><li>(3) 应用 canvas变换</li><li>(4) 应用 canvas内长方形拖拽</li><li>(5) 应用 canvas内圆形拖拽</li><li>(6) 应用 下载canvas绘图</li><li>(7) 应用 canvas运动回调</li><li>(8) canvas框架 jCanvaScript.js</li></ul></li></ol></li><li><ol start="14"><li>H5内联SVG<ul><li>(1) 位图 &amp;&amp; 矢量图</li><li>(2) SVG使用</li><li>(3) SVG梗概</li><li>(4) SVG应用</li></ul></li></ol></li></ul><hr><p>更多内容可以订阅本人微信公众号，一起开启前端小白进阶的世界！<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1g59sd1aky1j325s0m80xf.jpg" alt="微信公众号：无媛无故"></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;HTML5语法概要&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端札记" scheme="https://wangchloe.vip/categories/%E5%89%8D%E7%AB%AF%E6%9C%AD%E8%AE%B0/"/>
    
    
      <category term="HTML5" scheme="https://wangchloe.vip/tags/HTML5/"/>
    
  </entry>
  
</feed>
